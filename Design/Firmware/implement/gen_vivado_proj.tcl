#
# Vivado (TM) v2014.2 (64-bit)
#
# gen_vivado_proj.tcl: Tcl script for re-creating project 'project_1'
#
# Generated by Vivado on Tue Jul 19 21:22:24 -0700 2016
# IP Build 924643 on Fri May 30 09:20:16 MDT 2014
#
# This file contains the Vivado Tcl commands for re-creating the project to the state*
# when this script was generated. In order to re-create the project, please source this
# file in the Vivado Tcl Shell.
#
# * Note that the runs in the created project will be configured the same way as the
#   original project, however they will not be launched automatically. To regenerate the
#   run results please launch the synthesis/implementation runs as needed.
#
#*****************************************************************************************
# NOTE: In order to use this script for source control purposes, please make sure that the
#       following files are added to the source control system:-
#
# 1. This project restoration tcl script (gen_vivado_proj.tcl) that was generated.
#
# 2. The following source(s) files that were local or imported into the original project.
#    (Please see the '$orig_proj_dir' and '$origin_dir' variable setting below at the start of the script)
#
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/source/fmc150/src/pulse2pulse.vhd"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/source/fmc150/src/fmc150_stellar_cmd.vhd"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/source/fmc150/src/duc_complex_mixer.vhd"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/source/fmc150/src/ddc_complex_mixer.vhd"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/source/ethernet/fifo/kc705_ethernet_rgmii_bram_tdp.v"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/source/ethernet/common/kc705_ethernet_rgmii_sync_block.v"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/source/ethernet/common/kc705_ethernet_rgmii_reset_sync.v"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/ip/dac3283_init_mem/dac3283_init.coe"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/ip/cdce72010_init_mem_int/cdce72010_init_int_491_52MHz.coe"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/ip/cdce72010_init_mem_ext/cdce72010_init_ext_491_52MHz.coe"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/ip/amc7823_init_mem/amc7823_init.coe"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/ip/ads62p49_init_mem/ads62p49_init.coe"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/source/fmc150/src/duc_umts_k7.vhd"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/source/fmc150/src/ddc_umts_k7.vhd"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/source/fmc150/src/dac3283_ctrl.vhd"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/source/fmc150/src/cdce72010_ctrl.vhd"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/source/fmc150/src/amc7823_ctrl.vhd"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/source/fmc150/src/ads62p49_ctrl.vhd"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/source/ethernet/support/kc705_ethernet_rgmii_support_resets.v"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/source/ethernet/support/kc705_ethernet_rgmii_support_clocking.v"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/source/ethernet/fifo/kc705_ethernet_rgmii_tx_client_fifo.v"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/source/ethernet/fifo/kc705_ethernet_rgmii_rx_client_fifo.v"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/source/fmc150/src/fmc150_spi_ctrl.vhd"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/source/fmc150/src/DUC_DDC.vhd"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/source/fmc150/src/ADC_auto_calibration.vhd"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/source/ethernet/support/kc705_ethernet_rgmii_support.v"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/source/ethernet/pat_gen/kc705_ethernet_rgmii_axi_pipe.v"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/source/ethernet/pat_gen/kc705_ethernet_rgmii_axi_pat_gen.v"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/source/ethernet/pat_gen/kc705_ethernet_rgmii_axi_pat_check.v"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/source/ethernet/pat_gen/kc705_ethernet_rgmii_axi_mux.v"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/source/ethernet/pat_gen/kc705_ethernet_rgmii_address_swap.v"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/source/ethernet/fifo/kc705_ethernet_rgmii_ten_100_1g_eth_fifo.v"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/source/custom/kc705_ethernet_rgmii_axi_packetizer.v"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/ip/vio/vio.xci"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/ip/mmcm_adac/mmcm_adac.xci"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/ip/mmcm/mmcm.xci"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/ip/ila/ila.xci"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/source/fmc150/src/kc705_fmc150_ILA3.vhd"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/source/ethernet/pat_gen/kc705_ethernet_rgmii_basic_pat_gen.v"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/source/ethernet/kc705_ethernet_rgmii_fifo_block.v"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/source/ethernet/kc705_ethernet_rgmii_clk_wiz.v"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/source/ethernet/axi_lite_sm/kc705_ethernet_rgmii_axi_lite_sm.v"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/source/custom/adc_data_axis_wrapper.v"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/source/ethernet/kc705_ethernet_rgmii_example_design_resets.v"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/source/ethernet/kc705_ethernet_rgmii_example_design_clocks.v"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/source/ethernet/kc705_ethernet_rgmii_example_design.v"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/source/custom/radar_pulse_controller.v"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/source/custom/fmc150_dac_adc.v"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/ip/mig_7series_1/mig_b.prj"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/source/custom/kc705_gpr_top.v"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/source/custom/config_reg_map.v"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/source/custom/control_module.v"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/source/custom/reg_map_cmd_gen.v"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/source/fmc150/src/CHIRP_DDS.vhd"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/source/custom/synchronizer_simple.v"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/source/custom/kc705_ethernet_rgmii_axi_rx_decoder.v"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/source/custom/axi_rx_command_gen.v"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/ip/decoder_ila/decoder_ila.xci"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/sim/decoder/cmd_decoder_top.v"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/source/custom/signal_hold.v"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/ip/dds_duc/dds_duc.xci"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/ip/dds_ddc/dds_ddc.xci"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/ip/complex_multiplier_DUC/complex_multiplier_DUC.xci"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/ip/complex_multiplier/complex_multiplier.xci"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/ip/duc_srrc/duc_srrc.xci"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/ip/duc_imf3/duc_imf3.xci"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/ip/duc_imf2/duc_imf2.xci"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/ip/duc_imf1/duc_imf1.xci"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/ip/ddc_srrc/ddc_srrc.xci"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/ip/ddc_imf2/ddc_imf2.xci"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/ip/ddc_imf1/ddc_imf1.xci"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/ip/dac3283_init_mem/dac3283_init_mem.xci"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/ip/cdce72010_init_mem_int/cdce72010_init_mem_int.xci"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/ip/cdce72010_init_mem_ext/cdce72010_init_mem_ext.xci"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/ip/amc7823_init_mem/amc7823_init_mem.xci"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/ip/ads62p49_init_mem/ads62p49_init_mem.xci"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/ip/SP_DDS/SP_DDS.xci"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/ip/kc705_ethernet_rgmii/kc705_ethernet_rgmii.xci"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/ip/DDS/DDS.xci"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/ip/packetizer_ila/packetizer_ila.xci"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/ip/ila_adc_wr_fifo/ila_adc_wr_fifo.xci"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/ip/ila_adc_rd_fifo/ila_adc_rd_fifo.xci"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/ip/fifo_generator_adc/fifo_generator_adc.xci"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/ip/mig_7series_1/mig_7series_1.xci"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/ip/ila_axi_mm2s_ic/ila_axi_mm2s_ic.xci"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/ip/ila_axis_vfifo/ila_axis_vfifo.xci"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/ip/ila_axis_adc_pkt/ila_axis_adc_pkt.xci"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/ip/ila_axis_adc/ila_axis_adc.xci"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/ip/axi_vfifo_ctrl_0/axi_vfifo_ctrl_0.xci"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/ip/axis_interconnect_1s2m/axis_interconnect_1s2m.xci"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/ip/axis_interconnect_1m2s/axis_interconnect_1m2s.xci"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/ip/ila_regmap/ila_regmap.xci"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/ip/rx_cmd_axis_dwidth_converter/rx_cmd_axis_dwidth_converter.xci"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/ip/rx_cmd_axis_data_fifo/rx_cmd_axis_data_fifo.xci"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/ip/rx_cmd_1s4m_axis_interconnect/rx_cmd_1s4m_axis_interconnect.xci"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/constraints/k7dsp_dds_mig.xdc"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/sim/mig_sim/wiredly.v"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/sim/mig_sim/ddr3_model_parameters.vh"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/sim/mig_sim/ddr3_model.v"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/sim/fmc150_sim/KC705_fmc150_tb.vhd"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/sim/mig_sim/sim_tb_top.v"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/sim/packetizer/sim_tb_packetizer.v"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/sim/register_map/sim_tb_regmap.v"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/sim/decoder/sim_tb_cmd_decoder_behav.wcfg"
#    "D:/UndergroundRadar/kc705_GPR/Design/Firmware/sim/decoder/sim_tb_cmd_decoder.v"
#
# 3. The following remote source files that were added to the original project:-
#
#    <none>
#
#*****************************************************************************************

# Set the reference directory for source file relative paths (by default the value is script directory path)
set origin_dir "."

# Set the directory path for the original project from where this script was exported
set orig_proj_dir "[file normalize "$origin_dir/project_1"]"

# Create project
create_project project_1 ./project_1

# Set the directory path for the new project
set proj_dir [get_property directory [current_project]]

# Set project properties
set obj [get_projects project_1]
set_property "board_part" "xilinx.com:kc705:part0:1.0" $obj
set_property "default_lib" "xil_defaultlib" $obj
set_property "simulator_language" "Mixed" $obj
set_property "source_mgmt_mode" "DisplayOnly" $obj

# Create 'sources_1' fileset (if not found)
if {[string equal [get_filesets -quiet sources_1] ""]} {
  create_fileset -srcset sources_1
}

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 "[file normalize "$origin_dir/../source/fmc150/src/pulse2pulse.vhd"]"\
 "[file normalize "$origin_dir/../source/fmc150/src/fmc150_stellar_cmd.vhd"]"\
 "[file normalize "$origin_dir/../source/fmc150/src/duc_complex_mixer.vhd"]"\
 "[file normalize "$origin_dir/../source/fmc150/src/ddc_complex_mixer.vhd"]"\
 "[file normalize "$origin_dir/../source/ethernet/fifo/kc705_ethernet_rgmii_bram_tdp.v"]"\
 "[file normalize "$origin_dir/../source/ethernet/common/kc705_ethernet_rgmii_sync_block.v"]"\
 "[file normalize "$origin_dir/../source/ethernet/common/kc705_ethernet_rgmii_reset_sync.v"]"\
 "[file normalize "$origin_dir/../ip/dac3283_init_mem/dac3283_init.coe"]"\
 "[file normalize "$origin_dir/../ip/cdce72010_init_mem_int/cdce72010_init_int_491_52MHz.coe"]"\
 "[file normalize "$origin_dir/../ip/cdce72010_init_mem_ext/cdce72010_init_ext_491_52MHz.coe"]"\
 "[file normalize "$origin_dir/../ip/amc7823_init_mem/amc7823_init.coe"]"\
 "[file normalize "$origin_dir/../ip/ads62p49_init_mem/ads62p49_init.coe"]"\
 "[file normalize "$origin_dir/../source/fmc150/src/duc_umts_k7.vhd"]"\
 "[file normalize "$origin_dir/../source/fmc150/src/ddc_umts_k7.vhd"]"\
 "[file normalize "$origin_dir/../source/fmc150/src/dac3283_ctrl.vhd"]"\
 "[file normalize "$origin_dir/../source/fmc150/src/cdce72010_ctrl.vhd"]"\
 "[file normalize "$origin_dir/../source/fmc150/src/amc7823_ctrl.vhd"]"\
 "[file normalize "$origin_dir/../source/fmc150/src/ads62p49_ctrl.vhd"]"\
 "[file normalize "$origin_dir/../source/ethernet/support/kc705_ethernet_rgmii_support_resets.v"]"\
 "[file normalize "$origin_dir/../source/ethernet/support/kc705_ethernet_rgmii_support_clocking.v"]"\
 "[file normalize "$origin_dir/../source/ethernet/fifo/kc705_ethernet_rgmii_tx_client_fifo.v"]"\
 "[file normalize "$origin_dir/../source/ethernet/fifo/kc705_ethernet_rgmii_rx_client_fifo.v"]"\
 "[file normalize "$origin_dir/../source/fmc150/src/fmc150_spi_ctrl.vhd"]"\
 "[file normalize "$origin_dir/../source/fmc150/src/DUC_DDC.vhd"]"\
 "[file normalize "$origin_dir/../source/fmc150/src/ADC_auto_calibration.vhd"]"\
 "[file normalize "$origin_dir/../source/ethernet/support/kc705_ethernet_rgmii_support.v"]"\
 "[file normalize "$origin_dir/../source/ethernet/pat_gen/kc705_ethernet_rgmii_axi_pipe.v"]"\
 "[file normalize "$origin_dir/../source/ethernet/pat_gen/kc705_ethernet_rgmii_axi_pat_gen.v"]"\
 "[file normalize "$origin_dir/../source/ethernet/pat_gen/kc705_ethernet_rgmii_axi_pat_check.v"]"\
 "[file normalize "$origin_dir/../source/ethernet/pat_gen/kc705_ethernet_rgmii_axi_mux.v"]"\
 "[file normalize "$origin_dir/../source/ethernet/pat_gen/kc705_ethernet_rgmii_address_swap.v"]"\
 "[file normalize "$origin_dir/../source/ethernet/fifo/kc705_ethernet_rgmii_ten_100_1g_eth_fifo.v"]"\
 "[file normalize "$origin_dir/../source/custom/kc705_ethernet_rgmii_axi_packetizer.v"]"\
 "[file normalize "$origin_dir/../ip/vio/vio.xci"]"\
 "[file normalize "$origin_dir/../ip/mmcm_adac/mmcm_adac.xci"]"\
 "[file normalize "$origin_dir/../ip/mmcm/mmcm.xci"]"\
 "[file normalize "$origin_dir/../ip/ila/ila.xci"]"\
 "[file normalize "$origin_dir/../source/fmc150/src/kc705_fmc150_ILA3.vhd"]"\
 "[file normalize "$origin_dir/../source/ethernet/pat_gen/kc705_ethernet_rgmii_basic_pat_gen.v"]"\
 "[file normalize "$origin_dir/../source/ethernet/kc705_ethernet_rgmii_fifo_block.v"]"\
 "[file normalize "$origin_dir/../source/ethernet/kc705_ethernet_rgmii_clk_wiz.v"]"\
 "[file normalize "$origin_dir/../source/ethernet/axi_lite_sm/kc705_ethernet_rgmii_axi_lite_sm.v"]"\
 "[file normalize "$origin_dir/../source/custom/adc_data_axis_wrapper.v"]"\
 "[file normalize "$origin_dir/../source/ethernet/kc705_ethernet_rgmii_example_design_resets.v"]"\
 "[file normalize "$origin_dir/../source/ethernet/kc705_ethernet_rgmii_example_design_clocks.v"]"\
 "[file normalize "$origin_dir/../source/ethernet/kc705_ethernet_rgmii_example_design.v"]"\
 "[file normalize "$origin_dir/../source/custom/radar_pulse_controller.v"]"\
 "[file normalize "$origin_dir/../source/custom/fmc150_dac_adc.v"]"\
 "[file normalize "$origin_dir/../ip/mig_7series_1/mig_b.prj"]"\
 "[file normalize "$origin_dir/../source/custom/kc705_gpr_top.v"]"\
 "[file normalize "$origin_dir/../source/custom/config_reg_map.v"]"\
 "[file normalize "$origin_dir/../source/custom/control_module.v"]"\
 "[file normalize "$origin_dir/../source/custom/reg_map_cmd_gen.v"]"\
 "[file normalize "$origin_dir/../source/fmc150/src/CHIRP_DDS.vhd"]"\
 "[file normalize "$origin_dir/../source/custom/synchronizer_simple.v"]"\
 "[file normalize "$origin_dir/../source/custom/kc705_ethernet_rgmii_axi_rx_decoder.v"]"\
 "[file normalize "$origin_dir/../source/custom/axi_rx_command_gen.v"]"\
 "[file normalize "$origin_dir/../ip/decoder_ila/decoder_ila.xci"]"\
 "[file normalize "$origin_dir/../sim/decoder/cmd_decoder_top.v"]"\
 "[file normalize "$origin_dir/../source/custom/signal_hold.v"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
set file "src/pulse2pulse.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "src/fmc150_stellar_cmd.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "src/duc_complex_mixer.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj
set_property "is_enabled" "0" $file_obj

set file "src/ddc_complex_mixer.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj
set_property "is_enabled" "0" $file_obj

set file "src/duc_umts_k7.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj
set_property "is_enabled" "0" $file_obj

set file "src/ddc_umts_k7.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj
set_property "is_enabled" "0" $file_obj

set file "src/dac3283_ctrl.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "src/cdce72010_ctrl.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "src/amc7823_ctrl.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "src/ads62p49_ctrl.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "src/fmc150_spi_ctrl.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "src/DUC_DDC.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj
set_property "is_enabled" "0" $file_obj

set file "src/ADC_auto_calibration.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "vio/vio.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "is_enabled" "0" $file_obj

set file "mmcm_adac/mmcm_adac.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "generate_synth_checkpoint" "0" $file_obj

set file "mmcm/mmcm.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "is_enabled" "0" $file_obj

set file "ila/ila.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "generate_synth_checkpoint" "0" $file_obj

set file "src/kc705_fmc150_ILA3.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "src/CHIRP_DDS.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "custom/synchronizer_simple.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "is_enabled" "0" $file_obj

set file "decoder/cmd_decoder_top.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "is_enabled" "0" $file_obj


# Set 'sources_1' fileset properties
set obj [get_filesets sources_1]
set_property "top" "kc705_gpr_top" $obj

# Create 'dds_duc' fileset (if not found)
if {[string equal [get_filesets -quiet dds_duc] ""]} {
  create_fileset -blockset dds_duc
}

# Set 'dds_duc' fileset object
set obj [get_filesets dds_duc]
set files [list \
 "[file normalize "$origin_dir/../ip/dds_duc/dds_duc.xci"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'dds_duc' fileset file properties for remote files
# None

# Set 'dds_duc' fileset file properties for local files
set file "dds_duc/dds_duc.xci"
set file_obj [get_files -of_objects [get_filesets dds_duc] [list "*$file"]]
set_property "is_enabled" "0" $file_obj


# Set 'dds_duc' fileset properties
set obj [get_filesets dds_duc]
set_property "top" "dds_duc" $obj

# Create 'dds_ddc' fileset (if not found)
if {[string equal [get_filesets -quiet dds_ddc] ""]} {
  create_fileset -blockset dds_ddc
}

# Set 'dds_ddc' fileset object
set obj [get_filesets dds_ddc]
set files [list \
 "[file normalize "$origin_dir/../ip/dds_ddc/dds_ddc.xci"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'dds_ddc' fileset file properties for remote files
# None

# Set 'dds_ddc' fileset file properties for local files
set file "dds_ddc/dds_ddc.xci"
set file_obj [get_files -of_objects [get_filesets dds_ddc] [list "*$file"]]
set_property "is_enabled" "0" $file_obj


# Set 'dds_ddc' fileset properties
set obj [get_filesets dds_ddc]
set_property "top" "dds_ddc" $obj

# Create 'complex_multiplier_DUC' fileset (if not found)
if {[string equal [get_filesets -quiet complex_multiplier_DUC] ""]} {
  create_fileset -blockset complex_multiplier_DUC
}

# Set 'complex_multiplier_DUC' fileset object
set obj [get_filesets complex_multiplier_DUC]
set files [list \
 "[file normalize "$origin_dir/../ip/complex_multiplier_DUC/complex_multiplier_DUC.xci"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'complex_multiplier_DUC' fileset file properties for remote files
# None

# Set 'complex_multiplier_DUC' fileset file properties for local files
set file "complex_multiplier_DUC/complex_multiplier_DUC.xci"
set file_obj [get_files -of_objects [get_filesets complex_multiplier_DUC] [list "*$file"]]
set_property "is_enabled" "0" $file_obj


# Set 'complex_multiplier_DUC' fileset properties
set obj [get_filesets complex_multiplier_DUC]
set_property "top" "complex_multiplier_DUC" $obj

# Create 'complex_multiplier' fileset (if not found)
if {[string equal [get_filesets -quiet complex_multiplier] ""]} {
  create_fileset -blockset complex_multiplier
}

# Set 'complex_multiplier' fileset object
set obj [get_filesets complex_multiplier]
set files [list \
 "[file normalize "$origin_dir/../ip/complex_multiplier/complex_multiplier.xci"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'complex_multiplier' fileset file properties for remote files
# None

# Set 'complex_multiplier' fileset file properties for local files
set file "complex_multiplier/complex_multiplier.xci"
set file_obj [get_files -of_objects [get_filesets complex_multiplier] [list "*$file"]]
set_property "is_enabled" "0" $file_obj


# Set 'complex_multiplier' fileset properties
set obj [get_filesets complex_multiplier]
set_property "top" "complex_multiplier" $obj

# Create 'duc_srrc' fileset (if not found)
if {[string equal [get_filesets -quiet duc_srrc] ""]} {
  create_fileset -blockset duc_srrc
}

# Set 'duc_srrc' fileset object
set obj [get_filesets duc_srrc]
set files [list \
 "[file normalize "$origin_dir/../ip/duc_srrc/duc_srrc.xci"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'duc_srrc' fileset file properties for remote files
# None

# Set 'duc_srrc' fileset file properties for local files
set file "duc_srrc/duc_srrc.xci"
set file_obj [get_files -of_objects [get_filesets duc_srrc] [list "*$file"]]
set_property "is_enabled" "0" $file_obj


# Set 'duc_srrc' fileset properties
set obj [get_filesets duc_srrc]
set_property "top" "duc_srrc" $obj

# Create 'duc_imf3' fileset (if not found)
if {[string equal [get_filesets -quiet duc_imf3] ""]} {
  create_fileset -blockset duc_imf3
}

# Set 'duc_imf3' fileset object
set obj [get_filesets duc_imf3]
set files [list \
 "[file normalize "$origin_dir/../ip/duc_imf3/duc_imf3.xci"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'duc_imf3' fileset file properties for remote files
# None

# Set 'duc_imf3' fileset file properties for local files
set file "duc_imf3/duc_imf3.xci"
set file_obj [get_files -of_objects [get_filesets duc_imf3] [list "*$file"]]
set_property "is_enabled" "0" $file_obj


# Set 'duc_imf3' fileset properties
set obj [get_filesets duc_imf3]
set_property "top" "duc_imf3" $obj

# Create 'duc_imf2' fileset (if not found)
if {[string equal [get_filesets -quiet duc_imf2] ""]} {
  create_fileset -blockset duc_imf2
}

# Set 'duc_imf2' fileset object
set obj [get_filesets duc_imf2]
set files [list \
 "[file normalize "$origin_dir/../ip/duc_imf2/duc_imf2.xci"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'duc_imf2' fileset file properties for remote files
# None

# Set 'duc_imf2' fileset file properties for local files
set file "duc_imf2/duc_imf2.xci"
set file_obj [get_files -of_objects [get_filesets duc_imf2] [list "*$file"]]
set_property "is_enabled" "0" $file_obj


# Set 'duc_imf2' fileset properties
set obj [get_filesets duc_imf2]
set_property "top" "duc_imf2" $obj

# Create 'duc_imf1' fileset (if not found)
if {[string equal [get_filesets -quiet duc_imf1] ""]} {
  create_fileset -blockset duc_imf1
}

# Set 'duc_imf1' fileset object
set obj [get_filesets duc_imf1]
set files [list \
 "[file normalize "$origin_dir/../ip/duc_imf1/duc_imf1.xci"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'duc_imf1' fileset file properties for remote files
# None

# Set 'duc_imf1' fileset file properties for local files
set file "duc_imf1/duc_imf1.xci"
set file_obj [get_files -of_objects [get_filesets duc_imf1] [list "*$file"]]
set_property "is_enabled" "0" $file_obj


# Set 'duc_imf1' fileset properties
set obj [get_filesets duc_imf1]
set_property "top" "duc_imf1" $obj

# Create 'ddc_srrc' fileset (if not found)
if {[string equal [get_filesets -quiet ddc_srrc] ""]} {
  create_fileset -blockset ddc_srrc
}

# Set 'ddc_srrc' fileset object
set obj [get_filesets ddc_srrc]
set files [list \
 "[file normalize "$origin_dir/../ip/ddc_srrc/ddc_srrc.xci"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'ddc_srrc' fileset file properties for remote files
# None

# Set 'ddc_srrc' fileset file properties for local files
set file "ddc_srrc/ddc_srrc.xci"
set file_obj [get_files -of_objects [get_filesets ddc_srrc] [list "*$file"]]
set_property "is_enabled" "0" $file_obj


# Set 'ddc_srrc' fileset properties
set obj [get_filesets ddc_srrc]
set_property "top" "ddc_srrc" $obj

# Create 'ddc_imf2' fileset (if not found)
if {[string equal [get_filesets -quiet ddc_imf2] ""]} {
  create_fileset -blockset ddc_imf2
}

# Set 'ddc_imf2' fileset object
set obj [get_filesets ddc_imf2]
set files [list \
 "[file normalize "$origin_dir/../ip/ddc_imf2/ddc_imf2.xci"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'ddc_imf2' fileset file properties for remote files
# None

# Set 'ddc_imf2' fileset file properties for local files
set file "ddc_imf2/ddc_imf2.xci"
set file_obj [get_files -of_objects [get_filesets ddc_imf2] [list "*$file"]]
set_property "is_enabled" "0" $file_obj


# Set 'ddc_imf2' fileset properties
set obj [get_filesets ddc_imf2]
set_property "top" "ddc_imf2" $obj

# Create 'ddc_imf1' fileset (if not found)
if {[string equal [get_filesets -quiet ddc_imf1] ""]} {
  create_fileset -blockset ddc_imf1
}

# Set 'ddc_imf1' fileset object
set obj [get_filesets ddc_imf1]
set files [list \
 "[file normalize "$origin_dir/../ip/ddc_imf1/ddc_imf1.xci"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'ddc_imf1' fileset file properties for remote files
# None

# Set 'ddc_imf1' fileset file properties for local files
set file "ddc_imf1/ddc_imf1.xci"
set file_obj [get_files -of_objects [get_filesets ddc_imf1] [list "*$file"]]
set_property "is_enabled" "0" $file_obj


# Set 'ddc_imf1' fileset properties
set obj [get_filesets ddc_imf1]
set_property "top" "ddc_imf1" $obj

# Create 'dac3283_init_mem' fileset (if not found)
if {[string equal [get_filesets -quiet dac3283_init_mem] ""]} {
  create_fileset -blockset dac3283_init_mem
}

# Set 'dac3283_init_mem' fileset object
set obj [get_filesets dac3283_init_mem]
set files [list \
 "[file normalize "$origin_dir/../ip/dac3283_init_mem/dac3283_init_mem.xci"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'dac3283_init_mem' fileset file properties for remote files
# None

# Set 'dac3283_init_mem' fileset file properties for local files
# None

# Set 'dac3283_init_mem' fileset properties
set obj [get_filesets dac3283_init_mem]
set_property "top" "dac3283_init_mem" $obj

# Create 'cdce72010_init_mem_int' fileset (if not found)
if {[string equal [get_filesets -quiet cdce72010_init_mem_int] ""]} {
  create_fileset -blockset cdce72010_init_mem_int
}

# Set 'cdce72010_init_mem_int' fileset object
set obj [get_filesets cdce72010_init_mem_int]
set files [list \
 "[file normalize "$origin_dir/../ip/cdce72010_init_mem_int/cdce72010_init_mem_int.xci"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'cdce72010_init_mem_int' fileset file properties for remote files
# None

# Set 'cdce72010_init_mem_int' fileset file properties for local files
# None

# Set 'cdce72010_init_mem_int' fileset properties
set obj [get_filesets cdce72010_init_mem_int]
set_property "top" "cdce72010_init_mem_int" $obj

# Create 'cdce72010_init_mem_ext' fileset (if not found)
if {[string equal [get_filesets -quiet cdce72010_init_mem_ext] ""]} {
  create_fileset -blockset cdce72010_init_mem_ext
}

# Set 'cdce72010_init_mem_ext' fileset object
set obj [get_filesets cdce72010_init_mem_ext]
set files [list \
 "[file normalize "$origin_dir/../ip/cdce72010_init_mem_ext/cdce72010_init_mem_ext.xci"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'cdce72010_init_mem_ext' fileset file properties for remote files
# None

# Set 'cdce72010_init_mem_ext' fileset file properties for local files
# None

# Set 'cdce72010_init_mem_ext' fileset properties
set obj [get_filesets cdce72010_init_mem_ext]
set_property "top" "cdce72010_init_mem_ext" $obj

# Create 'amc7823_init_mem' fileset (if not found)
if {[string equal [get_filesets -quiet amc7823_init_mem] ""]} {
  create_fileset -blockset amc7823_init_mem
}

# Set 'amc7823_init_mem' fileset object
set obj [get_filesets amc7823_init_mem]
set files [list \
 "[file normalize "$origin_dir/../ip/amc7823_init_mem/amc7823_init_mem.xci"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'amc7823_init_mem' fileset file properties for remote files
# None

# Set 'amc7823_init_mem' fileset file properties for local files
# None

# Set 'amc7823_init_mem' fileset properties
set obj [get_filesets amc7823_init_mem]
set_property "top" "amc7823_init_mem" $obj

# Create 'ads62p49_init_mem' fileset (if not found)
if {[string equal [get_filesets -quiet ads62p49_init_mem] ""]} {
  create_fileset -blockset ads62p49_init_mem
}

# Set 'ads62p49_init_mem' fileset object
set obj [get_filesets ads62p49_init_mem]
set files [list \
 "[file normalize "$origin_dir/../ip/ads62p49_init_mem/ads62p49_init_mem.xci"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'ads62p49_init_mem' fileset file properties for remote files
# None

# Set 'ads62p49_init_mem' fileset file properties for local files
# None

# Set 'ads62p49_init_mem' fileset properties
set obj [get_filesets ads62p49_init_mem]
set_property "top" "ads62p49_init_mem" $obj

# Create 'SP_DDS' fileset (if not found)
if {[string equal [get_filesets -quiet SP_DDS] ""]} {
  create_fileset -blockset SP_DDS
}

# Set 'SP_DDS' fileset object
set obj [get_filesets SP_DDS]
set files [list \
 "[file normalize "$origin_dir/../ip/SP_DDS/SP_DDS.xci"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'SP_DDS' fileset file properties for remote files
# None

# Set 'SP_DDS' fileset file properties for local files
# None

# Set 'SP_DDS' fileset properties
set obj [get_filesets SP_DDS]
set_property "top" "SP_DDS" $obj

# Create 'kc705_ethernet_rgmii' fileset (if not found)
if {[string equal [get_filesets -quiet kc705_ethernet_rgmii] ""]} {
  create_fileset -blockset kc705_ethernet_rgmii
}

# Set 'kc705_ethernet_rgmii' fileset object
set obj [get_filesets kc705_ethernet_rgmii]
set files [list \
 "[file normalize "$origin_dir/../ip/kc705_ethernet_rgmii/kc705_ethernet_rgmii.xci"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'kc705_ethernet_rgmii' fileset file properties for remote files
# None

# Set 'kc705_ethernet_rgmii' fileset file properties for local files
# None

# Set 'kc705_ethernet_rgmii' fileset properties
set obj [get_filesets kc705_ethernet_rgmii]
set_property "top" "kc705_ethernet_rgmii" $obj

# Create 'DDS' fileset (if not found)
if {[string equal [get_filesets -quiet DDS] ""]} {
  create_fileset -blockset DDS
}

# Set 'DDS' fileset object
set obj [get_filesets DDS]
set files [list \
 "[file normalize "$origin_dir/../ip/DDS/DDS.xci"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'DDS' fileset file properties for remote files
# None

# Set 'DDS' fileset file properties for local files
set file "DDS/DDS.xci"
set file_obj [get_files -of_objects [get_filesets DDS] [list "*$file"]]
set_property "is_enabled" "0" $file_obj


# Set 'DDS' fileset properties
set obj [get_filesets DDS]
set_property "top" "DDS" $obj

# Create 'packetizer_ila' fileset (if not found)
if {[string equal [get_filesets -quiet packetizer_ila] ""]} {
  create_fileset -blockset packetizer_ila
}

# Set 'packetizer_ila' fileset object
set obj [get_filesets packetizer_ila]
set files [list \
 "[file normalize "$origin_dir/../ip/packetizer_ila/packetizer_ila.xci"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'packetizer_ila' fileset file properties for remote files
# None

# Set 'packetizer_ila' fileset file properties for local files
# None

# Set 'packetizer_ila' fileset properties
set obj [get_filesets packetizer_ila]
set_property "top" "packetizer_ila" $obj

# Create 'ila_adc_wr_fifo' fileset (if not found)
if {[string equal [get_filesets -quiet ila_adc_wr_fifo] ""]} {
  create_fileset -blockset ila_adc_wr_fifo
}

# Set 'ila_adc_wr_fifo' fileset object
set obj [get_filesets ila_adc_wr_fifo]
set files [list \
 "[file normalize "$origin_dir/../ip/ila_adc_wr_fifo/ila_adc_wr_fifo.xci"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'ila_adc_wr_fifo' fileset file properties for remote files
# None

# Set 'ila_adc_wr_fifo' fileset file properties for local files
# None

# Set 'ila_adc_wr_fifo' fileset properties
set obj [get_filesets ila_adc_wr_fifo]
set_property "top" "ila_adc_wr_fifo" $obj

# Create 'ila_adc_rd_fifo' fileset (if not found)
if {[string equal [get_filesets -quiet ila_adc_rd_fifo] ""]} {
  create_fileset -blockset ila_adc_rd_fifo
}

# Set 'ila_adc_rd_fifo' fileset object
set obj [get_filesets ila_adc_rd_fifo]
set files [list \
 "[file normalize "$origin_dir/../ip/ila_adc_rd_fifo/ila_adc_rd_fifo.xci"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'ila_adc_rd_fifo' fileset file properties for remote files
# None

# Set 'ila_adc_rd_fifo' fileset file properties for local files
# None

# Set 'ila_adc_rd_fifo' fileset properties
set obj [get_filesets ila_adc_rd_fifo]
set_property "top" "ila_adc_rd_fifo" $obj

# Create 'fifo_generator_adc' fileset (if not found)
if {[string equal [get_filesets -quiet fifo_generator_adc] ""]} {
  create_fileset -blockset fifo_generator_adc
}

# Set 'fifo_generator_adc' fileset object
set obj [get_filesets fifo_generator_adc]
set files [list \
 "[file normalize "$origin_dir/../ip/fifo_generator_adc/fifo_generator_adc.xci"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'fifo_generator_adc' fileset file properties for remote files
# None

# Set 'fifo_generator_adc' fileset file properties for local files
# None

# Set 'fifo_generator_adc' fileset properties
set obj [get_filesets fifo_generator_adc]
set_property "top" "fifo_generator_adc" $obj

# Create 'mig_7series_1' fileset (if not found)
if {[string equal [get_filesets -quiet mig_7series_1] ""]} {
  create_fileset -blockset mig_7series_1
}

# Set 'mig_7series_1' fileset object
set obj [get_filesets mig_7series_1]
set files [list \
 "[file normalize "$origin_dir/../ip/mig_7series_1/mig_7series_1.xci"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'mig_7series_1' fileset file properties for remote files
# None

# Set 'mig_7series_1' fileset file properties for local files
# None

# Set 'mig_7series_1' fileset properties
set obj [get_filesets mig_7series_1]
set_property "top" "mig_7series_1" $obj

# Create 'ila_axi_mm2s_ic' fileset (if not found)
if {[string equal [get_filesets -quiet ila_axi_mm2s_ic] ""]} {
  create_fileset -blockset ila_axi_mm2s_ic
}

# Set 'ila_axi_mm2s_ic' fileset object
set obj [get_filesets ila_axi_mm2s_ic]
set files [list \
 "[file normalize "$origin_dir/../ip/ila_axi_mm2s_ic/ila_axi_mm2s_ic.xci"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'ila_axi_mm2s_ic' fileset file properties for remote files
# None

# Set 'ila_axi_mm2s_ic' fileset file properties for local files
# None

# Set 'ila_axi_mm2s_ic' fileset properties
set obj [get_filesets ila_axi_mm2s_ic]
set_property "top" "ila_axi_mm2s_ic" $obj

# Create 'ila_axis_vfifo' fileset (if not found)
if {[string equal [get_filesets -quiet ila_axis_vfifo] ""]} {
  create_fileset -blockset ila_axis_vfifo
}

# Set 'ila_axis_vfifo' fileset object
set obj [get_filesets ila_axis_vfifo]
set files [list \
 "[file normalize "$origin_dir/../ip/ila_axis_vfifo/ila_axis_vfifo.xci"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'ila_axis_vfifo' fileset file properties for remote files
# None

# Set 'ila_axis_vfifo' fileset file properties for local files
# None

# Set 'ila_axis_vfifo' fileset properties
set obj [get_filesets ila_axis_vfifo]
set_property "top" "ila_axis_vfifo" $obj

# Create 'ila_axis_adc_pkt' fileset (if not found)
if {[string equal [get_filesets -quiet ila_axis_adc_pkt] ""]} {
  create_fileset -blockset ila_axis_adc_pkt
}

# Set 'ila_axis_adc_pkt' fileset object
set obj [get_filesets ila_axis_adc_pkt]
set files [list \
 "[file normalize "$origin_dir/../ip/ila_axis_adc_pkt/ila_axis_adc_pkt.xci"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'ila_axis_adc_pkt' fileset file properties for remote files
# None

# Set 'ila_axis_adc_pkt' fileset file properties for local files
# None

# Set 'ila_axis_adc_pkt' fileset properties
set obj [get_filesets ila_axis_adc_pkt]
set_property "top" "ila_axis_adc_pkt" $obj

# Create 'ila_axis_adc' fileset (if not found)
if {[string equal [get_filesets -quiet ila_axis_adc] ""]} {
  create_fileset -blockset ila_axis_adc
}

# Set 'ila_axis_adc' fileset object
set obj [get_filesets ila_axis_adc]
set files [list \
 "[file normalize "$origin_dir/../ip/ila_axis_adc/ila_axis_adc.xci"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'ila_axis_adc' fileset file properties for remote files
# None

# Set 'ila_axis_adc' fileset file properties for local files
# None

# Set 'ila_axis_adc' fileset properties
set obj [get_filesets ila_axis_adc]
set_property "top" "ila_axis_adc" $obj

# Create 'axi_vfifo_ctrl_0' fileset (if not found)
if {[string equal [get_filesets -quiet axi_vfifo_ctrl_0] ""]} {
  create_fileset -blockset axi_vfifo_ctrl_0
}

# Set 'axi_vfifo_ctrl_0' fileset object
set obj [get_filesets axi_vfifo_ctrl_0]
set files [list \
 "[file normalize "$origin_dir/../ip/axi_vfifo_ctrl_0/axi_vfifo_ctrl_0.xci"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'axi_vfifo_ctrl_0' fileset file properties for remote files
# None

# Set 'axi_vfifo_ctrl_0' fileset file properties for local files
# None

# Set 'axi_vfifo_ctrl_0' fileset properties
set obj [get_filesets axi_vfifo_ctrl_0]
set_property "top" "axi_vfifo_ctrl_0" $obj

# Create 'axis_interconnect_1s2m' fileset (if not found)
if {[string equal [get_filesets -quiet axis_interconnect_1s2m] ""]} {
  create_fileset -blockset axis_interconnect_1s2m
}

# Set 'axis_interconnect_1s2m' fileset object
set obj [get_filesets axis_interconnect_1s2m]
set files [list \
 "[file normalize "$origin_dir/../ip/axis_interconnect_1s2m/axis_interconnect_1s2m.xci"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'axis_interconnect_1s2m' fileset file properties for remote files
# None

# Set 'axis_interconnect_1s2m' fileset file properties for local files
# None

# Set 'axis_interconnect_1s2m' fileset properties
set obj [get_filesets axis_interconnect_1s2m]
set_property "top" "axis_interconnect_1s2m" $obj

# Create 'axis_interconnect_1m2s' fileset (if not found)
if {[string equal [get_filesets -quiet axis_interconnect_1m2s] ""]} {
  create_fileset -blockset axis_interconnect_1m2s
}

# Set 'axis_interconnect_1m2s' fileset object
set obj [get_filesets axis_interconnect_1m2s]
set files [list \
 "[file normalize "$origin_dir/../ip/axis_interconnect_1m2s/axis_interconnect_1m2s.xci"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'axis_interconnect_1m2s' fileset file properties for remote files
# None

# Set 'axis_interconnect_1m2s' fileset file properties for local files
# None

# Set 'axis_interconnect_1m2s' fileset properties
set obj [get_filesets axis_interconnect_1m2s]
set_property "top" "axis_interconnect_1m2s" $obj

# Create 'ila_regmap' fileset (if not found)
if {[string equal [get_filesets -quiet ila_regmap] ""]} {
  create_fileset -blockset ila_regmap
}

# Set 'ila_regmap' fileset object
set obj [get_filesets ila_regmap]
set files [list \
 "[file normalize "$origin_dir/../ip/ila_regmap/ila_regmap.xci"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'ila_regmap' fileset file properties for remote files
# None

# Set 'ila_regmap' fileset file properties for local files
# None

# Set 'ila_regmap' fileset properties
set obj [get_filesets ila_regmap]
set_property "top" "ila_regmap" $obj

# Create 'rx_cmd_axis_dwidth_converter' fileset (if not found)
if {[string equal [get_filesets -quiet rx_cmd_axis_dwidth_converter] ""]} {
  create_fileset -blockset rx_cmd_axis_dwidth_converter
}

# Set 'rx_cmd_axis_dwidth_converter' fileset object
set obj [get_filesets rx_cmd_axis_dwidth_converter]
set files [list \
 "[file normalize "$origin_dir/../ip/rx_cmd_axis_dwidth_converter/rx_cmd_axis_dwidth_converter.xci"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'rx_cmd_axis_dwidth_converter' fileset file properties for remote files
# None

# Set 'rx_cmd_axis_dwidth_converter' fileset file properties for local files
set file "rx_cmd_axis_dwidth_converter/rx_cmd_axis_dwidth_converter.xci"
set file_obj [get_files -of_objects [get_filesets rx_cmd_axis_dwidth_converter] [list "*$file"]]
set_property "is_enabled" "0" $file_obj


# Set 'rx_cmd_axis_dwidth_converter' fileset properties
set obj [get_filesets rx_cmd_axis_dwidth_converter]
set_property "top" "rx_cmd_axis_dwidth_converter" $obj

# Create 'rx_cmd_axis_data_fifo' fileset (if not found)
if {[string equal [get_filesets -quiet rx_cmd_axis_data_fifo] ""]} {
  create_fileset -blockset rx_cmd_axis_data_fifo
}

# Set 'rx_cmd_axis_data_fifo' fileset object
set obj [get_filesets rx_cmd_axis_data_fifo]
set files [list \
 "[file normalize "$origin_dir/../ip/rx_cmd_axis_data_fifo/rx_cmd_axis_data_fifo.xci"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'rx_cmd_axis_data_fifo' fileset file properties for remote files
# None

# Set 'rx_cmd_axis_data_fifo' fileset file properties for local files
set file "rx_cmd_axis_data_fifo/rx_cmd_axis_data_fifo.xci"
set file_obj [get_files -of_objects [get_filesets rx_cmd_axis_data_fifo] [list "*$file"]]
set_property "is_enabled" "0" $file_obj


# Set 'rx_cmd_axis_data_fifo' fileset properties
set obj [get_filesets rx_cmd_axis_data_fifo]
set_property "top" "rx_cmd_axis_data_fifo" $obj

# Create 'rx_cmd_1s4m_axis_interconnect' fileset (if not found)
if {[string equal [get_filesets -quiet rx_cmd_1s4m_axis_interconnect] ""]} {
  create_fileset -blockset rx_cmd_1s4m_axis_interconnect
}

# Set 'rx_cmd_1s4m_axis_interconnect' fileset object
set obj [get_filesets rx_cmd_1s4m_axis_interconnect]
set files [list \
 "[file normalize "$origin_dir/../ip/rx_cmd_1s4m_axis_interconnect/rx_cmd_1s4m_axis_interconnect.xci"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'rx_cmd_1s4m_axis_interconnect' fileset file properties for remote files
# None

# Set 'rx_cmd_1s4m_axis_interconnect' fileset file properties for local files
# None

# Set 'rx_cmd_1s4m_axis_interconnect' fileset properties
set obj [get_filesets rx_cmd_1s4m_axis_interconnect]
set_property "top" "rx_cmd_1s4m_axis_interconnect" $obj

# Create 'constrs_1' fileset (if not found)
if {[string equal [get_filesets -quiet constrs_1] ""]} {
  create_fileset -constrset constrs_1
}

# Set 'constrs_1' fileset object
set obj [get_filesets constrs_1]

# Add/Import constrs file and set constrs file properties
set file "constraints/k7dsp_dds_mig.xdc"
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property "file_type" "XDC" $file_obj

# Set 'constrs_1' fileset properties
set obj [get_filesets constrs_1]
set_property "target_constrs_file" "[file normalize "$origin_dir/../constraints/k7dsp_dds_mig.xdc"]" $obj

# Create 'sim_1' fileset (if not found)
if {[string equal [get_filesets -quiet sim_1] ""]} {
  create_fileset -simset sim_1
}

# Set 'sim_1' fileset object
set obj [get_filesets sim_1]
set files [list \
 "[file normalize "$origin_dir/../sim/mig_sim/wiredly.v"]"\
 "[file normalize "$origin_dir/../sim/mig_sim/ddr3_model_parameters.vh"]"\
 "[file normalize "$origin_dir/../sim/mig_sim/ddr3_model.v"]"\
 "[file normalize "$origin_dir/../sim/fmc150_sim/KC705_fmc150_tb.vhd"]"\
 "[file normalize "$origin_dir/../sim/mig_sim/sim_tb_top.v"]"\
 "[file normalize "$origin_dir/../sim/packetizer/sim_tb_packetizer.v"]"\
 "[file normalize "$origin_dir/../sim/register_map/sim_tb_regmap.v"]"\
 "[file normalize "$origin_dir/../sim/decoder/sim_tb_cmd_decoder_behav.wcfg"]"\
 "[file normalize "$origin_dir/../sim/decoder/sim_tb_cmd_decoder.v"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'sim_1' fileset file properties for remote files
# None

# Set 'sim_1' fileset file properties for local files
set file "mig_sim/ddr3_model_parameters.vh"
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property "file_type" "Verilog Header" $file_obj

set file "fmc150_sim/KC705_fmc150_tb.vhd"
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj


# Set 'sim_1' fileset properties
set obj [get_filesets sim_1]
set_property "top" "sim_tb_top" $obj

# Create 'synth_1' run (if not found)
if {[string equal [get_runs -quiet synth_1] ""]} {
  create_run -name synth_1 -part xc7k325tffg900-2 -flow {Vivado Synthesis 2014} -strategy "Vivado Synthesis Defaults" -constrset constrs_1
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs synth_1]
  set_property flow "Vivado Synthesis 2014" [get_runs synth_1]
}
set obj [get_runs synth_1]

# Create 'dds_duc_synth_1' run (if not found)
if {[string equal [get_runs -quiet dds_duc_synth_1] ""]} {
  create_run -name dds_duc_synth_1 -part xc7k325tffg900-2 -flow {Vivado Synthesis 2014} -strategy "Vivado Synthesis Defaults" -constrset dds_duc
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs dds_duc_synth_1]
  set_property flow "Vivado Synthesis 2014" [get_runs dds_duc_synth_1]
}
set obj [get_runs dds_duc_synth_1]
set_property "constrset" "dds_duc" $obj
set_property "needs_refresh" "1" $obj

# Create 'dds_ddc_synth_1' run (if not found)
if {[string equal [get_runs -quiet dds_ddc_synth_1] ""]} {
  create_run -name dds_ddc_synth_1 -part xc7k325tffg900-2 -flow {Vivado Synthesis 2014} -strategy "Vivado Synthesis Defaults" -constrset dds_ddc
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs dds_ddc_synth_1]
  set_property flow "Vivado Synthesis 2014" [get_runs dds_ddc_synth_1]
}
set obj [get_runs dds_ddc_synth_1]
set_property "constrset" "dds_ddc" $obj
set_property "needs_refresh" "1" $obj

# Create 'complex_multiplier_DUC_synth_1' run (if not found)
if {[string equal [get_runs -quiet complex_multiplier_DUC_synth_1] ""]} {
  create_run -name complex_multiplier_DUC_synth_1 -part xc7k325tffg900-2 -flow {Vivado Synthesis 2014} -strategy "Vivado Synthesis Defaults" -constrset complex_multiplier_DUC
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs complex_multiplier_DUC_synth_1]
  set_property flow "Vivado Synthesis 2014" [get_runs complex_multiplier_DUC_synth_1]
}
set obj [get_runs complex_multiplier_DUC_synth_1]
set_property "constrset" "complex_multiplier_DUC" $obj
set_property "needs_refresh" "1" $obj

# Create 'complex_multiplier_synth_1' run (if not found)
if {[string equal [get_runs -quiet complex_multiplier_synth_1] ""]} {
  create_run -name complex_multiplier_synth_1 -part xc7k325tffg900-2 -flow {Vivado Synthesis 2014} -strategy "Vivado Synthesis Defaults" -constrset complex_multiplier
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs complex_multiplier_synth_1]
  set_property flow "Vivado Synthesis 2014" [get_runs complex_multiplier_synth_1]
}
set obj [get_runs complex_multiplier_synth_1]
set_property "constrset" "complex_multiplier" $obj
set_property "needs_refresh" "1" $obj

# Create 'duc_srrc_synth_1' run (if not found)
if {[string equal [get_runs -quiet duc_srrc_synth_1] ""]} {
  create_run -name duc_srrc_synth_1 -part xc7k325tffg900-2 -flow {Vivado Synthesis 2014} -strategy "Vivado Synthesis Defaults" -constrset duc_srrc
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs duc_srrc_synth_1]
  set_property flow "Vivado Synthesis 2014" [get_runs duc_srrc_synth_1]
}
set obj [get_runs duc_srrc_synth_1]
set_property "constrset" "duc_srrc" $obj
set_property "needs_refresh" "1" $obj

# Create 'duc_imf3_synth_1' run (if not found)
if {[string equal [get_runs -quiet duc_imf3_synth_1] ""]} {
  create_run -name duc_imf3_synth_1 -part xc7k325tffg900-2 -flow {Vivado Synthesis 2014} -strategy "Vivado Synthesis Defaults" -constrset duc_imf3
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs duc_imf3_synth_1]
  set_property flow "Vivado Synthesis 2014" [get_runs duc_imf3_synth_1]
}
set obj [get_runs duc_imf3_synth_1]
set_property "constrset" "duc_imf3" $obj
set_property "needs_refresh" "1" $obj

# Create 'duc_imf2_synth_1' run (if not found)
if {[string equal [get_runs -quiet duc_imf2_synth_1] ""]} {
  create_run -name duc_imf2_synth_1 -part xc7k325tffg900-2 -flow {Vivado Synthesis 2014} -strategy "Vivado Synthesis Defaults" -constrset duc_imf2
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs duc_imf2_synth_1]
  set_property flow "Vivado Synthesis 2014" [get_runs duc_imf2_synth_1]
}
set obj [get_runs duc_imf2_synth_1]
set_property "constrset" "duc_imf2" $obj
set_property "needs_refresh" "1" $obj

# Create 'duc_imf1_synth_1' run (if not found)
if {[string equal [get_runs -quiet duc_imf1_synth_1] ""]} {
  create_run -name duc_imf1_synth_1 -part xc7k325tffg900-2 -flow {Vivado Synthesis 2014} -strategy "Vivado Synthesis Defaults" -constrset duc_imf1
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs duc_imf1_synth_1]
  set_property flow "Vivado Synthesis 2014" [get_runs duc_imf1_synth_1]
}
set obj [get_runs duc_imf1_synth_1]
set_property "constrset" "duc_imf1" $obj
set_property "needs_refresh" "1" $obj

# Create 'ddc_srrc_synth_1' run (if not found)
if {[string equal [get_runs -quiet ddc_srrc_synth_1] ""]} {
  create_run -name ddc_srrc_synth_1 -part xc7k325tffg900-2 -flow {Vivado Synthesis 2014} -strategy "Vivado Synthesis Defaults" -constrset ddc_srrc
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs ddc_srrc_synth_1]
  set_property flow "Vivado Synthesis 2014" [get_runs ddc_srrc_synth_1]
}
set obj [get_runs ddc_srrc_synth_1]
set_property "constrset" "ddc_srrc" $obj
set_property "needs_refresh" "1" $obj

# Create 'ddc_imf2_synth_1' run (if not found)
if {[string equal [get_runs -quiet ddc_imf2_synth_1] ""]} {
  create_run -name ddc_imf2_synth_1 -part xc7k325tffg900-2 -flow {Vivado Synthesis 2014} -strategy "Vivado Synthesis Defaults" -constrset ddc_imf2
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs ddc_imf2_synth_1]
  set_property flow "Vivado Synthesis 2014" [get_runs ddc_imf2_synth_1]
}
set obj [get_runs ddc_imf2_synth_1]
set_property "constrset" "ddc_imf2" $obj
set_property "needs_refresh" "1" $obj

# Create 'ddc_imf1_synth_1' run (if not found)
if {[string equal [get_runs -quiet ddc_imf1_synth_1] ""]} {
  create_run -name ddc_imf1_synth_1 -part xc7k325tffg900-2 -flow {Vivado Synthesis 2014} -strategy "Vivado Synthesis Defaults" -constrset ddc_imf1
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs ddc_imf1_synth_1]
  set_property flow "Vivado Synthesis 2014" [get_runs ddc_imf1_synth_1]
}
set obj [get_runs ddc_imf1_synth_1]
set_property "constrset" "ddc_imf1" $obj
set_property "needs_refresh" "1" $obj

# Create 'dac3283_init_mem_synth_1' run (if not found)
if {[string equal [get_runs -quiet dac3283_init_mem_synth_1] ""]} {
  create_run -name dac3283_init_mem_synth_1 -part xc7k325tffg900-2 -flow {Vivado Synthesis 2014} -strategy "Vivado Synthesis Defaults" -constrset dac3283_init_mem
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs dac3283_init_mem_synth_1]
  set_property flow "Vivado Synthesis 2014" [get_runs dac3283_init_mem_synth_1]
}
set obj [get_runs dac3283_init_mem_synth_1]
set_property "constrset" "dac3283_init_mem" $obj
set_property "needs_refresh" "1" $obj

# Create 'cdce72010_init_mem_int_synth_1' run (if not found)
if {[string equal [get_runs -quiet cdce72010_init_mem_int_synth_1] ""]} {
  create_run -name cdce72010_init_mem_int_synth_1 -part xc7k325tffg900-2 -flow {Vivado Synthesis 2014} -strategy "Vivado Synthesis Defaults" -constrset cdce72010_init_mem_int
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs cdce72010_init_mem_int_synth_1]
  set_property flow "Vivado Synthesis 2014" [get_runs cdce72010_init_mem_int_synth_1]
}
set obj [get_runs cdce72010_init_mem_int_synth_1]
set_property "constrset" "cdce72010_init_mem_int" $obj
set_property "needs_refresh" "1" $obj

# Create 'cdce72010_init_mem_ext_synth_1' run (if not found)
if {[string equal [get_runs -quiet cdce72010_init_mem_ext_synth_1] ""]} {
  create_run -name cdce72010_init_mem_ext_synth_1 -part xc7k325tffg900-2 -flow {Vivado Synthesis 2014} -strategy "Vivado Synthesis Defaults" -constrset cdce72010_init_mem_ext
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs cdce72010_init_mem_ext_synth_1]
  set_property flow "Vivado Synthesis 2014" [get_runs cdce72010_init_mem_ext_synth_1]
}
set obj [get_runs cdce72010_init_mem_ext_synth_1]
set_property "constrset" "cdce72010_init_mem_ext" $obj
set_property "needs_refresh" "1" $obj

# Create 'amc7823_init_mem_synth_1' run (if not found)
if {[string equal [get_runs -quiet amc7823_init_mem_synth_1] ""]} {
  create_run -name amc7823_init_mem_synth_1 -part xc7k325tffg900-2 -flow {Vivado Synthesis 2014} -strategy "Vivado Synthesis Defaults" -constrset amc7823_init_mem
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs amc7823_init_mem_synth_1]
  set_property flow "Vivado Synthesis 2014" [get_runs amc7823_init_mem_synth_1]
}
set obj [get_runs amc7823_init_mem_synth_1]
set_property "constrset" "amc7823_init_mem" $obj
set_property "needs_refresh" "1" $obj

# Create 'ads62p49_init_mem_synth_1' run (if not found)
if {[string equal [get_runs -quiet ads62p49_init_mem_synth_1] ""]} {
  create_run -name ads62p49_init_mem_synth_1 -part xc7k325tffg900-2 -flow {Vivado Synthesis 2014} -strategy "Vivado Synthesis Defaults" -constrset ads62p49_init_mem
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs ads62p49_init_mem_synth_1]
  set_property flow "Vivado Synthesis 2014" [get_runs ads62p49_init_mem_synth_1]
}
set obj [get_runs ads62p49_init_mem_synth_1]
set_property "constrset" "ads62p49_init_mem" $obj
set_property "needs_refresh" "1" $obj

# Create 'SP_DDS_synth_1' run (if not found)
if {[string equal [get_runs -quiet SP_DDS_synth_1] ""]} {
  create_run -name SP_DDS_synth_1 -part xc7k325tffg900-2 -flow {Vivado Synthesis 2014} -strategy "Vivado Synthesis Defaults" -constrset SP_DDS
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs SP_DDS_synth_1]
  set_property flow "Vivado Synthesis 2014" [get_runs SP_DDS_synth_1]
}
set obj [get_runs SP_DDS_synth_1]
set_property "constrset" "SP_DDS" $obj

# Create 'kc705_ethernet_rgmii_synth_1' run (if not found)
if {[string equal [get_runs -quiet kc705_ethernet_rgmii_synth_1] ""]} {
  create_run -name kc705_ethernet_rgmii_synth_1 -part xc7k325tffg900-2 -flow {Vivado Synthesis 2014} -strategy "Vivado Synthesis Defaults" -constrset kc705_ethernet_rgmii
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs kc705_ethernet_rgmii_synth_1]
  set_property flow "Vivado Synthesis 2014" [get_runs kc705_ethernet_rgmii_synth_1]
}
set obj [get_runs kc705_ethernet_rgmii_synth_1]
set_property "constrset" "kc705_ethernet_rgmii" $obj
set_property "needs_refresh" "1" $obj

# Create 'DDS_synth_1' run (if not found)
if {[string equal [get_runs -quiet DDS_synth_1] ""]} {
  create_run -name DDS_synth_1 -part xc7k325tffg900-2 -flow {Vivado Synthesis 2014} -strategy "Vivado Synthesis Defaults" -constrset DDS
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs DDS_synth_1]
  set_property flow "Vivado Synthesis 2014" [get_runs DDS_synth_1]
}
set obj [get_runs DDS_synth_1]
set_property "constrset" "DDS" $obj
set_property "needs_refresh" "1" $obj

# Create 'packetizer_ila_synth_1' run (if not found)
if {[string equal [get_runs -quiet packetizer_ila_synth_1] ""]} {
  create_run -name packetizer_ila_synth_1 -part xc7k325tffg900-2 -flow {Vivado Synthesis 2014} -strategy "Vivado Synthesis Defaults" -constrset packetizer_ila
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs packetizer_ila_synth_1]
  set_property flow "Vivado Synthesis 2014" [get_runs packetizer_ila_synth_1]
}
set obj [get_runs packetizer_ila_synth_1]
set_property "constrset" "packetizer_ila" $obj
set_property "needs_refresh" "1" $obj

# Create 'ila_adc_wr_fifo_synth_1' run (if not found)
if {[string equal [get_runs -quiet ila_adc_wr_fifo_synth_1] ""]} {
  create_run -name ila_adc_wr_fifo_synth_1 -part xc7k325tffg900-2 -flow {Vivado Synthesis 2014} -strategy "Vivado Synthesis Defaults" -constrset ila_adc_wr_fifo
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs ila_adc_wr_fifo_synth_1]
  set_property flow "Vivado Synthesis 2014" [get_runs ila_adc_wr_fifo_synth_1]
}
set obj [get_runs ila_adc_wr_fifo_synth_1]
set_property "constrset" "ila_adc_wr_fifo" $obj
set_property "needs_refresh" "1" $obj

# Create 'ila_adc_rd_fifo_synth_1' run (if not found)
if {[string equal [get_runs -quiet ila_adc_rd_fifo_synth_1] ""]} {
  create_run -name ila_adc_rd_fifo_synth_1 -part xc7k325tffg900-2 -flow {Vivado Synthesis 2014} -strategy "Vivado Synthesis Defaults" -constrset ila_adc_rd_fifo
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs ila_adc_rd_fifo_synth_1]
  set_property flow "Vivado Synthesis 2014" [get_runs ila_adc_rd_fifo_synth_1]
}
set obj [get_runs ila_adc_rd_fifo_synth_1]
set_property "constrset" "ila_adc_rd_fifo" $obj
set_property "needs_refresh" "1" $obj

# Create 'fifo_generator_adc_synth_1' run (if not found)
if {[string equal [get_runs -quiet fifo_generator_adc_synth_1] ""]} {
  create_run -name fifo_generator_adc_synth_1 -part xc7k325tffg900-2 -flow {Vivado Synthesis 2014} -strategy "Vivado Synthesis Defaults" -constrset fifo_generator_adc
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs fifo_generator_adc_synth_1]
  set_property flow "Vivado Synthesis 2014" [get_runs fifo_generator_adc_synth_1]
}
set obj [get_runs fifo_generator_adc_synth_1]
set_property "constrset" "fifo_generator_adc" $obj
set_property "needs_refresh" "1" $obj

# Create 'mig_7series_1_synth_1' run (if not found)
if {[string equal [get_runs -quiet mig_7series_1_synth_1] ""]} {
  create_run -name mig_7series_1_synth_1 -part xc7k325tffg900-2 -flow {Vivado Synthesis 2014} -strategy "Vivado Synthesis Defaults" -constrset mig_7series_1
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs mig_7series_1_synth_1]
  set_property flow "Vivado Synthesis 2014" [get_runs mig_7series_1_synth_1]
}
set obj [get_runs mig_7series_1_synth_1]
set_property "constrset" "mig_7series_1" $obj
set_property "needs_refresh" "1" $obj

# Create 'ila_axi_mm2s_ic_synth_1' run (if not found)
if {[string equal [get_runs -quiet ila_axi_mm2s_ic_synth_1] ""]} {
  create_run -name ila_axi_mm2s_ic_synth_1 -part xc7k325tffg900-2 -flow {Vivado Synthesis 2014} -strategy "Vivado Synthesis Defaults" -constrset ila_axi_mm2s_ic
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs ila_axi_mm2s_ic_synth_1]
  set_property flow "Vivado Synthesis 2014" [get_runs ila_axi_mm2s_ic_synth_1]
}
set obj [get_runs ila_axi_mm2s_ic_synth_1]
set_property "constrset" "ila_axi_mm2s_ic" $obj
set_property "needs_refresh" "1" $obj

# Create 'ila_axis_vfifo_synth_1' run (if not found)
if {[string equal [get_runs -quiet ila_axis_vfifo_synth_1] ""]} {
  create_run -name ila_axis_vfifo_synth_1 -part xc7k325tffg900-2 -flow {Vivado Synthesis 2014} -strategy "Vivado Synthesis Defaults" -constrset ila_axis_vfifo
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs ila_axis_vfifo_synth_1]
  set_property flow "Vivado Synthesis 2014" [get_runs ila_axis_vfifo_synth_1]
}
set obj [get_runs ila_axis_vfifo_synth_1]
set_property "constrset" "ila_axis_vfifo" $obj
set_property "needs_refresh" "1" $obj

# Create 'ila_axis_adc_pkt_synth_1' run (if not found)
if {[string equal [get_runs -quiet ila_axis_adc_pkt_synth_1] ""]} {
  create_run -name ila_axis_adc_pkt_synth_1 -part xc7k325tffg900-2 -flow {Vivado Synthesis 2014} -strategy "Vivado Synthesis Defaults" -constrset ila_axis_adc_pkt
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs ila_axis_adc_pkt_synth_1]
  set_property flow "Vivado Synthesis 2014" [get_runs ila_axis_adc_pkt_synth_1]
}
set obj [get_runs ila_axis_adc_pkt_synth_1]
set_property "constrset" "ila_axis_adc_pkt" $obj
set_property "needs_refresh" "1" $obj

# Create 'ila_axis_adc_synth_1' run (if not found)
if {[string equal [get_runs -quiet ila_axis_adc_synth_1] ""]} {
  create_run -name ila_axis_adc_synth_1 -part xc7k325tffg900-2 -flow {Vivado Synthesis 2014} -strategy "Vivado Synthesis Defaults" -constrset ila_axis_adc
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs ila_axis_adc_synth_1]
  set_property flow "Vivado Synthesis 2014" [get_runs ila_axis_adc_synth_1]
}
set obj [get_runs ila_axis_adc_synth_1]
set_property "constrset" "ila_axis_adc" $obj
set_property "needs_refresh" "1" $obj

# Create 'axi_vfifo_ctrl_0_synth_1' run (if not found)
if {[string equal [get_runs -quiet axi_vfifo_ctrl_0_synth_1] ""]} {
  create_run -name axi_vfifo_ctrl_0_synth_1 -part xc7k325tffg900-2 -flow {Vivado Synthesis 2014} -strategy "Vivado Synthesis Defaults" -constrset axi_vfifo_ctrl_0
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs axi_vfifo_ctrl_0_synth_1]
  set_property flow "Vivado Synthesis 2014" [get_runs axi_vfifo_ctrl_0_synth_1]
}
set obj [get_runs axi_vfifo_ctrl_0_synth_1]
set_property "constrset" "axi_vfifo_ctrl_0" $obj
set_property "needs_refresh" "1" $obj

# Create 'axis_interconnect_1s2m_synth_1' run (if not found)
if {[string equal [get_runs -quiet axis_interconnect_1s2m_synth_1] ""]} {
  create_run -name axis_interconnect_1s2m_synth_1 -part xc7k325tffg900-2 -flow {Vivado Synthesis 2014} -strategy "Vivado Synthesis Defaults" -constrset axis_interconnect_1s2m
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs axis_interconnect_1s2m_synth_1]
  set_property flow "Vivado Synthesis 2014" [get_runs axis_interconnect_1s2m_synth_1]
}
set obj [get_runs axis_interconnect_1s2m_synth_1]
set_property "constrset" "axis_interconnect_1s2m" $obj
set_property "needs_refresh" "1" $obj

# Create 'axis_interconnect_1m2s_synth_1' run (if not found)
if {[string equal [get_runs -quiet axis_interconnect_1m2s_synth_1] ""]} {
  create_run -name axis_interconnect_1m2s_synth_1 -part xc7k325tffg900-2 -flow {Vivado Synthesis 2014} -strategy "Vivado Synthesis Defaults" -constrset axis_interconnect_1m2s
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs axis_interconnect_1m2s_synth_1]
  set_property flow "Vivado Synthesis 2014" [get_runs axis_interconnect_1m2s_synth_1]
}
set obj [get_runs axis_interconnect_1m2s_synth_1]
set_property "constrset" "axis_interconnect_1m2s" $obj
set_property "needs_refresh" "1" $obj

# Create 'ila_regmap_synth_1' run (if not found)
if {[string equal [get_runs -quiet ila_regmap_synth_1] ""]} {
  create_run -name ila_regmap_synth_1 -part xc7k325tffg900-2 -flow {Vivado Synthesis 2014} -strategy "Vivado Synthesis Defaults" -constrset ila_regmap
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs ila_regmap_synth_1]
  set_property flow "Vivado Synthesis 2014" [get_runs ila_regmap_synth_1]
}
set obj [get_runs ila_regmap_synth_1]
set_property "constrset" "ila_regmap" $obj

# Create 'rx_cmd_axis_dwidth_converter_synth_1' run (if not found)
if {[string equal [get_runs -quiet rx_cmd_axis_dwidth_converter_synth_1] ""]} {
  create_run -name rx_cmd_axis_dwidth_converter_synth_1 -part xc7k325tffg900-2 -flow {Vivado Synthesis 2014} -strategy "Vivado Synthesis Defaults" -constrset rx_cmd_axis_dwidth_converter
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs rx_cmd_axis_dwidth_converter_synth_1]
  set_property flow "Vivado Synthesis 2014" [get_runs rx_cmd_axis_dwidth_converter_synth_1]
}
set obj [get_runs rx_cmd_axis_dwidth_converter_synth_1]
set_property "constrset" "rx_cmd_axis_dwidth_converter" $obj
set_property "needs_refresh" "1" $obj

# Create 'rx_cmd_axis_data_fifo_synth_1' run (if not found)
if {[string equal [get_runs -quiet rx_cmd_axis_data_fifo_synth_1] ""]} {
  create_run -name rx_cmd_axis_data_fifo_synth_1 -part xc7k325tffg900-2 -flow {Vivado Synthesis 2014} -strategy "Vivado Synthesis Defaults" -constrset rx_cmd_axis_data_fifo
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs rx_cmd_axis_data_fifo_synth_1]
  set_property flow "Vivado Synthesis 2014" [get_runs rx_cmd_axis_data_fifo_synth_1]
}
set obj [get_runs rx_cmd_axis_data_fifo_synth_1]
set_property "constrset" "rx_cmd_axis_data_fifo" $obj
set_property "needs_refresh" "1" $obj

# Create 'rx_cmd_1s4m_axis_interconnect_synth_1' run (if not found)
if {[string equal [get_runs -quiet rx_cmd_1s4m_axis_interconnect_synth_1] ""]} {
  create_run -name rx_cmd_1s4m_axis_interconnect_synth_1 -part xc7k325tffg900-2 -flow {Vivado Synthesis 2014} -strategy "Vivado Synthesis Defaults" -constrset rx_cmd_1s4m_axis_interconnect
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs rx_cmd_1s4m_axis_interconnect_synth_1]
  set_property flow "Vivado Synthesis 2014" [get_runs rx_cmd_1s4m_axis_interconnect_synth_1]
}
set obj [get_runs rx_cmd_1s4m_axis_interconnect_synth_1]
set_property "constrset" "rx_cmd_1s4m_axis_interconnect" $obj

# set the current synth run
current_run -synthesis [get_runs synth_1]

# Create 'impl_1' run (if not found)
if {[string equal [get_runs -quiet impl_1] ""]} {
  create_run -name impl_1 -part xc7k325tffg900-2 -flow {Vivado Implementation 2014} -strategy "Vivado Implementation Defaults" -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_1]
  set_property flow "Vivado Implementation 2014" [get_runs impl_1]
}
set obj [get_runs impl_1]

# Create 'dds_duc_impl_1' run (if not found)
if {[string equal [get_runs -quiet dds_duc_impl_1] ""]} {
  create_run -name dds_duc_impl_1 -part xc7k325tffg900-2 -flow {Vivado Implementation 2014} -strategy "Vivado Implementation Defaults" -constrset dds_duc -parent_run dds_duc_synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs dds_duc_impl_1]
  set_property flow "Vivado Implementation 2014" [get_runs dds_duc_impl_1]
}
set obj [get_runs dds_duc_impl_1]
set_property "constrset" "dds_duc" $obj

# Create 'dds_ddc_impl_1' run (if not found)
if {[string equal [get_runs -quiet dds_ddc_impl_1] ""]} {
  create_run -name dds_ddc_impl_1 -part xc7k325tffg900-2 -flow {Vivado Implementation 2014} -strategy "Vivado Implementation Defaults" -constrset dds_ddc -parent_run dds_ddc_synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs dds_ddc_impl_1]
  set_property flow "Vivado Implementation 2014" [get_runs dds_ddc_impl_1]
}
set obj [get_runs dds_ddc_impl_1]
set_property "constrset" "dds_ddc" $obj

# Create 'complex_multiplier_DUC_impl_1' run (if not found)
if {[string equal [get_runs -quiet complex_multiplier_DUC_impl_1] ""]} {
  create_run -name complex_multiplier_DUC_impl_1 -part xc7k325tffg900-2 -flow {Vivado Implementation 2014} -strategy "Vivado Implementation Defaults" -constrset complex_multiplier_DUC -parent_run complex_multiplier_DUC_synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs complex_multiplier_DUC_impl_1]
  set_property flow "Vivado Implementation 2014" [get_runs complex_multiplier_DUC_impl_1]
}
set obj [get_runs complex_multiplier_DUC_impl_1]
set_property "constrset" "complex_multiplier_DUC" $obj

# Create 'complex_multiplier_impl_1' run (if not found)
if {[string equal [get_runs -quiet complex_multiplier_impl_1] ""]} {
  create_run -name complex_multiplier_impl_1 -part xc7k325tffg900-2 -flow {Vivado Implementation 2014} -strategy "Vivado Implementation Defaults" -constrset complex_multiplier -parent_run complex_multiplier_synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs complex_multiplier_impl_1]
  set_property flow "Vivado Implementation 2014" [get_runs complex_multiplier_impl_1]
}
set obj [get_runs complex_multiplier_impl_1]
set_property "constrset" "complex_multiplier" $obj

# Create 'duc_srrc_impl_1' run (if not found)
if {[string equal [get_runs -quiet duc_srrc_impl_1] ""]} {
  create_run -name duc_srrc_impl_1 -part xc7k325tffg900-2 -flow {Vivado Implementation 2014} -strategy "Vivado Implementation Defaults" -constrset duc_srrc -parent_run duc_srrc_synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs duc_srrc_impl_1]
  set_property flow "Vivado Implementation 2014" [get_runs duc_srrc_impl_1]
}
set obj [get_runs duc_srrc_impl_1]
set_property "constrset" "duc_srrc" $obj

# Create 'duc_imf3_impl_1' run (if not found)
if {[string equal [get_runs -quiet duc_imf3_impl_1] ""]} {
  create_run -name duc_imf3_impl_1 -part xc7k325tffg900-2 -flow {Vivado Implementation 2014} -strategy "Vivado Implementation Defaults" -constrset duc_imf3 -parent_run duc_imf3_synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs duc_imf3_impl_1]
  set_property flow "Vivado Implementation 2014" [get_runs duc_imf3_impl_1]
}
set obj [get_runs duc_imf3_impl_1]
set_property "constrset" "duc_imf3" $obj

# Create 'duc_imf2_impl_1' run (if not found)
if {[string equal [get_runs -quiet duc_imf2_impl_1] ""]} {
  create_run -name duc_imf2_impl_1 -part xc7k325tffg900-2 -flow {Vivado Implementation 2014} -strategy "Vivado Implementation Defaults" -constrset duc_imf2 -parent_run duc_imf2_synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs duc_imf2_impl_1]
  set_property flow "Vivado Implementation 2014" [get_runs duc_imf2_impl_1]
}
set obj [get_runs duc_imf2_impl_1]
set_property "constrset" "duc_imf2" $obj

# Create 'duc_imf1_impl_1' run (if not found)
if {[string equal [get_runs -quiet duc_imf1_impl_1] ""]} {
  create_run -name duc_imf1_impl_1 -part xc7k325tffg900-2 -flow {Vivado Implementation 2014} -strategy "Vivado Implementation Defaults" -constrset duc_imf1 -parent_run duc_imf1_synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs duc_imf1_impl_1]
  set_property flow "Vivado Implementation 2014" [get_runs duc_imf1_impl_1]
}
set obj [get_runs duc_imf1_impl_1]
set_property "constrset" "duc_imf1" $obj

# Create 'ddc_srrc_impl_1' run (if not found)
if {[string equal [get_runs -quiet ddc_srrc_impl_1] ""]} {
  create_run -name ddc_srrc_impl_1 -part xc7k325tffg900-2 -flow {Vivado Implementation 2014} -strategy "Vivado Implementation Defaults" -constrset ddc_srrc -parent_run ddc_srrc_synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs ddc_srrc_impl_1]
  set_property flow "Vivado Implementation 2014" [get_runs ddc_srrc_impl_1]
}
set obj [get_runs ddc_srrc_impl_1]
set_property "constrset" "ddc_srrc" $obj

# Create 'ddc_imf2_impl_1' run (if not found)
if {[string equal [get_runs -quiet ddc_imf2_impl_1] ""]} {
  create_run -name ddc_imf2_impl_1 -part xc7k325tffg900-2 -flow {Vivado Implementation 2014} -strategy "Vivado Implementation Defaults" -constrset ddc_imf2 -parent_run ddc_imf2_synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs ddc_imf2_impl_1]
  set_property flow "Vivado Implementation 2014" [get_runs ddc_imf2_impl_1]
}
set obj [get_runs ddc_imf2_impl_1]
set_property "constrset" "ddc_imf2" $obj

# Create 'ddc_imf1_impl_1' run (if not found)
if {[string equal [get_runs -quiet ddc_imf1_impl_1] ""]} {
  create_run -name ddc_imf1_impl_1 -part xc7k325tffg900-2 -flow {Vivado Implementation 2014} -strategy "Vivado Implementation Defaults" -constrset ddc_imf1 -parent_run ddc_imf1_synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs ddc_imf1_impl_1]
  set_property flow "Vivado Implementation 2014" [get_runs ddc_imf1_impl_1]
}
set obj [get_runs ddc_imf1_impl_1]
set_property "constrset" "ddc_imf1" $obj

# Create 'dac3283_init_mem_impl_1' run (if not found)
if {[string equal [get_runs -quiet dac3283_init_mem_impl_1] ""]} {
  create_run -name dac3283_init_mem_impl_1 -part xc7k325tffg900-2 -flow {Vivado Implementation 2014} -strategy "Vivado Implementation Defaults" -constrset dac3283_init_mem -parent_run dac3283_init_mem_synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs dac3283_init_mem_impl_1]
  set_property flow "Vivado Implementation 2014" [get_runs dac3283_init_mem_impl_1]
}
set obj [get_runs dac3283_init_mem_impl_1]
set_property "constrset" "dac3283_init_mem" $obj

# Create 'cdce72010_init_mem_int_impl_1' run (if not found)
if {[string equal [get_runs -quiet cdce72010_init_mem_int_impl_1] ""]} {
  create_run -name cdce72010_init_mem_int_impl_1 -part xc7k325tffg900-2 -flow {Vivado Implementation 2014} -strategy "Vivado Implementation Defaults" -constrset cdce72010_init_mem_int -parent_run cdce72010_init_mem_int_synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs cdce72010_init_mem_int_impl_1]
  set_property flow "Vivado Implementation 2014" [get_runs cdce72010_init_mem_int_impl_1]
}
set obj [get_runs cdce72010_init_mem_int_impl_1]
set_property "constrset" "cdce72010_init_mem_int" $obj

# Create 'cdce72010_init_mem_ext_impl_1' run (if not found)
if {[string equal [get_runs -quiet cdce72010_init_mem_ext_impl_1] ""]} {
  create_run -name cdce72010_init_mem_ext_impl_1 -part xc7k325tffg900-2 -flow {Vivado Implementation 2014} -strategy "Vivado Implementation Defaults" -constrset cdce72010_init_mem_ext -parent_run cdce72010_init_mem_ext_synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs cdce72010_init_mem_ext_impl_1]
  set_property flow "Vivado Implementation 2014" [get_runs cdce72010_init_mem_ext_impl_1]
}
set obj [get_runs cdce72010_init_mem_ext_impl_1]
set_property "constrset" "cdce72010_init_mem_ext" $obj

# Create 'amc7823_init_mem_impl_1' run (if not found)
if {[string equal [get_runs -quiet amc7823_init_mem_impl_1] ""]} {
  create_run -name amc7823_init_mem_impl_1 -part xc7k325tffg900-2 -flow {Vivado Implementation 2014} -strategy "Vivado Implementation Defaults" -constrset amc7823_init_mem -parent_run amc7823_init_mem_synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs amc7823_init_mem_impl_1]
  set_property flow "Vivado Implementation 2014" [get_runs amc7823_init_mem_impl_1]
}
set obj [get_runs amc7823_init_mem_impl_1]
set_property "constrset" "amc7823_init_mem" $obj

# Create 'ads62p49_init_mem_impl_1' run (if not found)
if {[string equal [get_runs -quiet ads62p49_init_mem_impl_1] ""]} {
  create_run -name ads62p49_init_mem_impl_1 -part xc7k325tffg900-2 -flow {Vivado Implementation 2014} -strategy "Vivado Implementation Defaults" -constrset ads62p49_init_mem -parent_run ads62p49_init_mem_synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs ads62p49_init_mem_impl_1]
  set_property flow "Vivado Implementation 2014" [get_runs ads62p49_init_mem_impl_1]
}
set obj [get_runs ads62p49_init_mem_impl_1]
set_property "constrset" "ads62p49_init_mem" $obj

# Create 'SP_DDS_impl_1' run (if not found)
if {[string equal [get_runs -quiet SP_DDS_impl_1] ""]} {
  create_run -name SP_DDS_impl_1 -part xc7k325tffg900-2 -flow {Vivado Implementation 2014} -strategy "Vivado Implementation Defaults" -constrset SP_DDS -parent_run SP_DDS_synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs SP_DDS_impl_1]
  set_property flow "Vivado Implementation 2014" [get_runs SP_DDS_impl_1]
}
set obj [get_runs SP_DDS_impl_1]
set_property "constrset" "SP_DDS" $obj

# Create 'kc705_ethernet_rgmii_impl_1' run (if not found)
if {[string equal [get_runs -quiet kc705_ethernet_rgmii_impl_1] ""]} {
  create_run -name kc705_ethernet_rgmii_impl_1 -part xc7k325tffg900-2 -flow {Vivado Implementation 2014} -strategy "Vivado Implementation Defaults" -constrset kc705_ethernet_rgmii -parent_run kc705_ethernet_rgmii_synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs kc705_ethernet_rgmii_impl_1]
  set_property flow "Vivado Implementation 2014" [get_runs kc705_ethernet_rgmii_impl_1]
}
set obj [get_runs kc705_ethernet_rgmii_impl_1]
set_property "constrset" "kc705_ethernet_rgmii" $obj

# Create 'DDS_impl_1' run (if not found)
if {[string equal [get_runs -quiet DDS_impl_1] ""]} {
  create_run -name DDS_impl_1 -part xc7k325tffg900-2 -flow {Vivado Implementation 2014} -strategy "Vivado Implementation Defaults" -constrset DDS -parent_run DDS_synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs DDS_impl_1]
  set_property flow "Vivado Implementation 2014" [get_runs DDS_impl_1]
}
set obj [get_runs DDS_impl_1]
set_property "constrset" "DDS" $obj

# Create 'packetizer_ila_impl_1' run (if not found)
if {[string equal [get_runs -quiet packetizer_ila_impl_1] ""]} {
  create_run -name packetizer_ila_impl_1 -part xc7k325tffg900-2 -flow {Vivado Implementation 2014} -strategy "Vivado Implementation Defaults" -constrset packetizer_ila -parent_run packetizer_ila_synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs packetizer_ila_impl_1]
  set_property flow "Vivado Implementation 2014" [get_runs packetizer_ila_impl_1]
}
set obj [get_runs packetizer_ila_impl_1]
set_property "constrset" "packetizer_ila" $obj

# Create 'ila_adc_wr_fifo_impl_1' run (if not found)
if {[string equal [get_runs -quiet ila_adc_wr_fifo_impl_1] ""]} {
  create_run -name ila_adc_wr_fifo_impl_1 -part xc7k325tffg900-2 -flow {Vivado Implementation 2014} -strategy "Vivado Implementation Defaults" -constrset ila_adc_wr_fifo -parent_run ila_adc_wr_fifo_synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs ila_adc_wr_fifo_impl_1]
  set_property flow "Vivado Implementation 2014" [get_runs ila_adc_wr_fifo_impl_1]
}
set obj [get_runs ila_adc_wr_fifo_impl_1]
set_property "constrset" "ila_adc_wr_fifo" $obj

# Create 'ila_adc_rd_fifo_impl_1' run (if not found)
if {[string equal [get_runs -quiet ila_adc_rd_fifo_impl_1] ""]} {
  create_run -name ila_adc_rd_fifo_impl_1 -part xc7k325tffg900-2 -flow {Vivado Implementation 2014} -strategy "Vivado Implementation Defaults" -constrset ila_adc_rd_fifo -parent_run ila_adc_rd_fifo_synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs ila_adc_rd_fifo_impl_1]
  set_property flow "Vivado Implementation 2014" [get_runs ila_adc_rd_fifo_impl_1]
}
set obj [get_runs ila_adc_rd_fifo_impl_1]
set_property "constrset" "ila_adc_rd_fifo" $obj

# Create 'fifo_generator_adc_impl_1' run (if not found)
if {[string equal [get_runs -quiet fifo_generator_adc_impl_1] ""]} {
  create_run -name fifo_generator_adc_impl_1 -part xc7k325tffg900-2 -flow {Vivado Implementation 2014} -strategy "Vivado Implementation Defaults" -constrset fifo_generator_adc -parent_run fifo_generator_adc_synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs fifo_generator_adc_impl_1]
  set_property flow "Vivado Implementation 2014" [get_runs fifo_generator_adc_impl_1]
}
set obj [get_runs fifo_generator_adc_impl_1]
set_property "constrset" "fifo_generator_adc" $obj

# Create 'mig_7series_1_impl_1' run (if not found)
if {[string equal [get_runs -quiet mig_7series_1_impl_1] ""]} {
  create_run -name mig_7series_1_impl_1 -part xc7k325tffg900-2 -flow {Vivado Implementation 2014} -strategy "Vivado Implementation Defaults" -constrset mig_7series_1 -parent_run mig_7series_1_synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs mig_7series_1_impl_1]
  set_property flow "Vivado Implementation 2014" [get_runs mig_7series_1_impl_1]
}
set obj [get_runs mig_7series_1_impl_1]
set_property "constrset" "mig_7series_1" $obj

# Create 'ila_axi_mm2s_ic_impl_1' run (if not found)
if {[string equal [get_runs -quiet ila_axi_mm2s_ic_impl_1] ""]} {
  create_run -name ila_axi_mm2s_ic_impl_1 -part xc7k325tffg900-2 -flow {Vivado Implementation 2014} -strategy "Vivado Implementation Defaults" -constrset ila_axi_mm2s_ic -parent_run ila_axi_mm2s_ic_synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs ila_axi_mm2s_ic_impl_1]
  set_property flow "Vivado Implementation 2014" [get_runs ila_axi_mm2s_ic_impl_1]
}
set obj [get_runs ila_axi_mm2s_ic_impl_1]
set_property "constrset" "ila_axi_mm2s_ic" $obj

# Create 'ila_axis_vfifo_impl_1' run (if not found)
if {[string equal [get_runs -quiet ila_axis_vfifo_impl_1] ""]} {
  create_run -name ila_axis_vfifo_impl_1 -part xc7k325tffg900-2 -flow {Vivado Implementation 2014} -strategy "Vivado Implementation Defaults" -constrset ila_axis_vfifo -parent_run ila_axis_vfifo_synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs ila_axis_vfifo_impl_1]
  set_property flow "Vivado Implementation 2014" [get_runs ila_axis_vfifo_impl_1]
}
set obj [get_runs ila_axis_vfifo_impl_1]
set_property "constrset" "ila_axis_vfifo" $obj

# Create 'ila_axis_adc_pkt_impl_1' run (if not found)
if {[string equal [get_runs -quiet ila_axis_adc_pkt_impl_1] ""]} {
  create_run -name ila_axis_adc_pkt_impl_1 -part xc7k325tffg900-2 -flow {Vivado Implementation 2014} -strategy "Vivado Implementation Defaults" -constrset ila_axis_adc_pkt -parent_run ila_axis_adc_pkt_synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs ila_axis_adc_pkt_impl_1]
  set_property flow "Vivado Implementation 2014" [get_runs ila_axis_adc_pkt_impl_1]
}
set obj [get_runs ila_axis_adc_pkt_impl_1]
set_property "constrset" "ila_axis_adc_pkt" $obj

# Create 'ila_axis_adc_impl_1' run (if not found)
if {[string equal [get_runs -quiet ila_axis_adc_impl_1] ""]} {
  create_run -name ila_axis_adc_impl_1 -part xc7k325tffg900-2 -flow {Vivado Implementation 2014} -strategy "Vivado Implementation Defaults" -constrset ila_axis_adc -parent_run ila_axis_adc_synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs ila_axis_adc_impl_1]
  set_property flow "Vivado Implementation 2014" [get_runs ila_axis_adc_impl_1]
}
set obj [get_runs ila_axis_adc_impl_1]
set_property "constrset" "ila_axis_adc" $obj

# Create 'axi_vfifo_ctrl_0_impl_1' run (if not found)
if {[string equal [get_runs -quiet axi_vfifo_ctrl_0_impl_1] ""]} {
  create_run -name axi_vfifo_ctrl_0_impl_1 -part xc7k325tffg900-2 -flow {Vivado Implementation 2014} -strategy "Vivado Implementation Defaults" -constrset axi_vfifo_ctrl_0 -parent_run axi_vfifo_ctrl_0_synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs axi_vfifo_ctrl_0_impl_1]
  set_property flow "Vivado Implementation 2014" [get_runs axi_vfifo_ctrl_0_impl_1]
}
set obj [get_runs axi_vfifo_ctrl_0_impl_1]
set_property "constrset" "axi_vfifo_ctrl_0" $obj

# Create 'axis_interconnect_1s2m_impl_1' run (if not found)
if {[string equal [get_runs -quiet axis_interconnect_1s2m_impl_1] ""]} {
  create_run -name axis_interconnect_1s2m_impl_1 -part xc7k325tffg900-2 -flow {Vivado Implementation 2014} -strategy "Vivado Implementation Defaults" -constrset axis_interconnect_1s2m -parent_run axis_interconnect_1s2m_synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs axis_interconnect_1s2m_impl_1]
  set_property flow "Vivado Implementation 2014" [get_runs axis_interconnect_1s2m_impl_1]
}
set obj [get_runs axis_interconnect_1s2m_impl_1]
set_property "constrset" "axis_interconnect_1s2m" $obj

# Create 'axis_interconnect_1m2s_impl_1' run (if not found)
if {[string equal [get_runs -quiet axis_interconnect_1m2s_impl_1] ""]} {
  create_run -name axis_interconnect_1m2s_impl_1 -part xc7k325tffg900-2 -flow {Vivado Implementation 2014} -strategy "Vivado Implementation Defaults" -constrset axis_interconnect_1m2s -parent_run axis_interconnect_1m2s_synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs axis_interconnect_1m2s_impl_1]
  set_property flow "Vivado Implementation 2014" [get_runs axis_interconnect_1m2s_impl_1]
}
set obj [get_runs axis_interconnect_1m2s_impl_1]
set_property "constrset" "axis_interconnect_1m2s" $obj

# Create 'ila_regmap_impl_1' run (if not found)
if {[string equal [get_runs -quiet ila_regmap_impl_1] ""]} {
  create_run -name ila_regmap_impl_1 -part xc7k325tffg900-2 -flow {Vivado Implementation 2014} -strategy "Vivado Implementation Defaults" -constrset ila_regmap -parent_run ila_regmap_synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs ila_regmap_impl_1]
  set_property flow "Vivado Implementation 2014" [get_runs ila_regmap_impl_1]
}
set obj [get_runs ila_regmap_impl_1]
set_property "constrset" "ila_regmap" $obj

# Create 'impl_2' run (if not found)
if {[string equal [get_runs -quiet impl_2] ""]} {
  create_run -name impl_2 -part xc7k325tffg900-2 -flow {Vivado Implementation 2014} -strategy "Performance_Explore" -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Performance_Explore" [get_runs impl_2]
  set_property flow "Vivado Implementation 2014" [get_runs impl_2]
}
set obj [get_runs impl_2]
set_property "steps.opt_design.args.directive" "Explore" $obj
set_property "steps.place_design.args.directive" "Explore" $obj
set_property "steps.phys_opt_design.is_enabled" "1" $obj
set_property "steps.phys_opt_design.args.directive" "Explore" $obj
set_property "steps.route_design.args.directive" "Explore" $obj

# Create 'rx_cmd_axis_dwidth_converter_impl_1' run (if not found)
if {[string equal [get_runs -quiet rx_cmd_axis_dwidth_converter_impl_1] ""]} {
  create_run -name rx_cmd_axis_dwidth_converter_impl_1 -part xc7k325tffg900-2 -flow {Vivado Implementation 2014} -strategy "Vivado Implementation Defaults" -constrset rx_cmd_axis_dwidth_converter -parent_run rx_cmd_axis_dwidth_converter_synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs rx_cmd_axis_dwidth_converter_impl_1]
  set_property flow "Vivado Implementation 2014" [get_runs rx_cmd_axis_dwidth_converter_impl_1]
}
set obj [get_runs rx_cmd_axis_dwidth_converter_impl_1]
set_property "constrset" "rx_cmd_axis_dwidth_converter" $obj

# Create 'rx_cmd_axis_data_fifo_impl_1' run (if not found)
if {[string equal [get_runs -quiet rx_cmd_axis_data_fifo_impl_1] ""]} {
  create_run -name rx_cmd_axis_data_fifo_impl_1 -part xc7k325tffg900-2 -flow {Vivado Implementation 2014} -strategy "Vivado Implementation Defaults" -constrset rx_cmd_axis_data_fifo -parent_run rx_cmd_axis_data_fifo_synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs rx_cmd_axis_data_fifo_impl_1]
  set_property flow "Vivado Implementation 2014" [get_runs rx_cmd_axis_data_fifo_impl_1]
}
set obj [get_runs rx_cmd_axis_data_fifo_impl_1]
set_property "constrset" "rx_cmd_axis_data_fifo" $obj

# Create 'rx_cmd_1s4m_axis_interconnect_impl_1' run (if not found)
if {[string equal [get_runs -quiet rx_cmd_1s4m_axis_interconnect_impl_1] ""]} {
  create_run -name rx_cmd_1s4m_axis_interconnect_impl_1 -part xc7k325tffg900-2 -flow {Vivado Implementation 2014} -strategy "Vivado Implementation Defaults" -constrset rx_cmd_1s4m_axis_interconnect -parent_run rx_cmd_1s4m_axis_interconnect_synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs rx_cmd_1s4m_axis_interconnect_impl_1]
  set_property flow "Vivado Implementation 2014" [get_runs rx_cmd_1s4m_axis_interconnect_impl_1]
}
set obj [get_runs rx_cmd_1s4m_axis_interconnect_impl_1]
set_property "constrset" "rx_cmd_1s4m_axis_interconnect" $obj

# set the current impl run
current_run -implementation [get_runs impl_2]

puts "INFO: Project created:project_1"
