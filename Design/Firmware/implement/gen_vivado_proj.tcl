#
# Vivado (TM) v2014.2 (64-bit)
#
# gen_vivado_proj.tcl: Tcl script for re-creating project 'project_1'
#
# Generated by Vivado on Fri Jun 24 02:34:12 PDT 2016
# IP Build 924643 on Fri May 30 09:20:16 MDT 2014
#
# This file contains the Vivado Tcl commands for re-creating the project to the state*
# when this script was generated. In order to re-create the project, please source this
# file in the Vivado Tcl Shell.
#
# * Note that the runs in the created project will be configured the same way as the
#   original project, however they will not be launched automatically. To regenerate the
#   run results please launch the synthesis/implementation runs as needed.
#
#*****************************************************************************************
# NOTE: In order to use this script for source control purposes, please make sure that the
#       following files are added to the source control system:-
#
# 1. This project restoration tcl script (gen_vivado_proj.tcl) that was generated.
#
# 2. The following source(s) files that were local or imported into the original project.
#    (Please see the '$orig_proj_dir' and '$origin_dir' variable setting below at the start of the script)
#
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/source/fmc150/src/pulse2pulse.vhd"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/ip/dds_duc/dds_duc.xci"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/ip/dds_ddc/dds_ddc.xci"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/ip/complex_multiplier_DUC/complex_multiplier_DUC.xci"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/ip/complex_multiplier/complex_multiplier.xci"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/source/fmc150/src/fmc150_stellar_cmd.vhd"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/source/fmc150/src/duc_complex_mixer.vhd"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/source/fmc150/src/ddc_complex_mixer.vhd"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/source/ethernet/fifo/kc705_ethernet_rgmii_bram_tdp.v"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/source/ethernet/common/kc705_ethernet_rgmii_sync_block.v"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/source/ethernet/common/kc705_ethernet_rgmii_reset_sync.v"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/ip/duc_srrc/duc_srrc.xci"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/ip/duc_imf3/duc_imf3.xci"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/ip/duc_imf2/duc_imf2.xci"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/ip/duc_imf1/duc_imf1.xci"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/ip/ddc_srrc/ddc_srrc.xci"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/ip/ddc_imf2/ddc_imf2.xci"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/ip/ddc_imf1/ddc_imf1.xci"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/ip/dac3283_init_mem/dac3283_init_mem.xci"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/ip/dac3283_init_mem/dac3283_init.coe"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/ip/cdce72010_init_mem_int/cdce72010_init_mem_int.xci"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/ip/cdce72010_init_mem_int/cdce72010_init_int_491_52MHz.coe"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/ip/cdce72010_init_mem_ext/cdce72010_init_mem_ext.xci"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/ip/cdce72010_init_mem_ext/cdce72010_init_ext_491_52MHz.coe"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/ip/amc7823_init_mem/amc7823_init_mem.xci"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/ip/amc7823_init_mem/amc7823_init.coe"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/ip/ads62p49_init_mem/ads62p49_init_mem.xci"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/ip/ads62p49_init_mem/ads62p49_init.coe"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/source/fmc150/src/duc_umts_k7.vhd"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/source/fmc150/src/ddc_umts_k7.vhd"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/source/fmc150/src/dac3283_ctrl.vhd"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/source/fmc150/src/cdce72010_ctrl.vhd"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/source/fmc150/src/amc7823_ctrl.vhd"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/source/fmc150/src/ads62p49_ctrl.vhd"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/source/ethernet/support/kc705_ethernet_rgmii_support_resets.v"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/source/ethernet/support/kc705_ethernet_rgmii_support_clocking.v"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/source/ethernet/fifo/kc705_ethernet_rgmii_tx_client_fifo.v"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/source/ethernet/fifo/kc705_ethernet_rgmii_rx_client_fifo.v"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/ip/SP_DDS/SP_DDS.xci"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/ip/kc705_ethernet_rgmii/kc705_ethernet_rgmii.xci"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/ip/DDS/DDS.xci"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/source/fmc150/src/fmc150_spi_ctrl.vhd"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/source/fmc150/src/DUC_DDC.vhd"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/source/fmc150/src/ADC_auto_calibration.vhd"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/source/ethernet/support/kc705_ethernet_rgmii_support.v"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/source/ethernet/pat_gen/kc705_ethernet_rgmii_axi_pipe.v"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/source/ethernet/pat_gen/kc705_ethernet_rgmii_axi_pat_gen.v"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/source/ethernet/pat_gen/kc705_ethernet_rgmii_axi_pat_check.v"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/source/ethernet/pat_gen/kc705_ethernet_rgmii_axi_mux.v"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/source/ethernet/pat_gen/kc705_ethernet_rgmii_address_swap.v"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/source/ethernet/fifo/kc705_ethernet_rgmii_ten_100_1g_eth_fifo.v"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/source/custom/kc705_ethernet_rgmii_axi_packetizer.v"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/ip/vio/vio.xci"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/ip/packetizer_ila/packetizer_ila.xci"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/ip/mmcm_adac/mmcm_adac.xci"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/ip/mmcm/mmcm.xci"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/ip/ila/ila.xci"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/source/fmc150/src/kc705_fmc150_ILA3.vhd"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/source/ethernet/pat_gen/kc705_ethernet_rgmii_basic_pat_gen.v"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/source/ethernet/kc705_ethernet_rgmii_fifo_block.v"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/source/ethernet/kc705_ethernet_rgmii_clk_wiz.v"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/source/ethernet/axi_lite_sm/kc705_ethernet_rgmii_axi_lite_sm.v"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/source/custom/adc_data_axis_wrapper.v"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/ip/ila_adc_wr_fifo/ila_adc_wr_fifo.xci"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/ip/ila_adc_rd_fifo/ila_adc_rd_fifo.xci"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/ip/fifo_generator_adc/fifo_generator_adc.xci"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/source/ethernet/kc705_ethernet_rgmii_example_design_resets.v"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/source/ethernet/kc705_ethernet_rgmii_example_design_clocks.v"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/source/ethernet/kc705_ethernet_rgmii_example_design.v"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/source/custom/radar_pulse_controller.v"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/source/custom/fmc150_dac_adc.v"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/ip/mig_7series_1/mig_7series_1.xci"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/ip/mig_7series_1/mig_b.prj"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/ip/ila_axi_mm2s_ic/ila_axi_mm2s_ic.xci"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/ip/ila_axis_vfifo/ila_axis_vfifo.xci"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/ip/ila_axis_adc_pkt/ila_axis_adc_pkt.xci"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/ip/ila_axis_adc/ila_axis_adc.xci"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/ip/axi_vfifo_ctrl_0/axi_vfifo_ctrl_0.xci"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/ip/axis_interconnect_1s2m/axis_interconnect_1s2m.xci"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/ip/axis_interconnect_1m2s/axis_interconnect_1m2s.xci"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/source/custom/kc705_gpr_top.v"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/ip/ila_regmap/ila_regmap.xci"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/source/custom/config_reg_map.v"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/source/custom/reg_map_cmd_gen.v"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/source/dma/axis_write_master.vhd"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/source/dma/axis_sts_master.vhd"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/source/dma/axis_data_read.vhd"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/source/dma/axis_ctrl_read.vhd"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/source/dma/axi_s2mm_read.vhd"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/source/dma/axi_lite_sm.vhd"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/source/dma/axi_dma_0_exdes.vhd"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/source/dma/axi4_write_master.vhd"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/ip/axi_dma_0_example/axi_bram_ctrl_0/axi_bram_ctrl_0.xci"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/ip/axi_dma_0_example/axi_traffic_gen_0/axi_traffic_gen_0.xci"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/source/dma/atg_data.coe"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/source/dma/atg_addr.coe"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/source/dma/atg_mask.coe"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/source/dma/atg_ctrl.coe"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/ip/axi_dma_0_example/blk_mem_gen_0/blk_mem_gen_0.xci"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/source/dma/sg_mif.coe"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/ip/axi_dma_0_example/axi_dma_0/axi_dma_0.xci"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/ip/axi_dma_0_example/axi_bram_ctrl_1/axi_bram_ctrl_1.xci"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/constraints/k7dsp_dds_mig.xdc"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/sim/mig_sim/wiredly.v"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/sim/mig_sim/ddr3_model_parameters.vh"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/sim/mig_sim/ddr3_model.v"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/sim/fmc150_sim/KC705_fmc150_tb.vhd"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/sim/mig_sim/sim_tb_top.v"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/sim/packetizer/sim_tb_packetizer.v"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/sim/dma/axi_dma_0_exdes_tb.vhd"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/source/dma/axis_write_master.vhd"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/source/dma/axis_sts_master.vhd"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/source/dma/axis_data_read.vhd"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/source/dma/axis_ctrl_read.vhd"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/source/dma/axi_s2mm_read.vhd"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/source/dma/axi_lite_sm.vhd"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/source/dma/axi_dma_0_exdes.vhd"
#    "/media/sf_VMLinux/Projects/UndergroundRadar/kc705_GPR/Design/Firmware/source/dma/axi4_write_master.vhd"
#
# 3. The following remote source files that were added to the original project:-
#
#    <none>
#
#*****************************************************************************************

# Set the reference directory for source file relative paths (by default the value is script directory path)
set origin_dir "."

# Set the directory path for the original project from where this script was exported
set orig_proj_dir "[file normalize "$origin_dir/project_1"]"

# Create project
create_project project_1 ./project_1

# Set the directory path for the new project
set proj_dir [get_property directory [current_project]]

# Set project properties
set obj [get_projects project_1]
set_property "board_part" "xilinx.com:kc705:part0:1.0" $obj
set_property "default_lib" "xil_defaultlib" $obj
set_property "simulator_language" "Mixed" $obj
set_property "source_mgmt_mode" "DisplayOnly" $obj

# Create 'sources_1' fileset (if not found)
if {[string equal [get_filesets -quiet sources_1] ""]} {
  create_fileset -srcset sources_1
}

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 "[file normalize "$origin_dir/../source/fmc150/src/pulse2pulse.vhd"]"\
 "[file normalize "$origin_dir/../ip/dds_duc/dds_duc.xci"]"\
 "[file normalize "$origin_dir/../ip/dds_ddc/dds_ddc.xci"]"\
 "[file normalize "$origin_dir/../ip/complex_multiplier_DUC/complex_multiplier_DUC.xci"]"\
 "[file normalize "$origin_dir/../ip/complex_multiplier/complex_multiplier.xci"]"\
 "[file normalize "$origin_dir/../source/fmc150/src/fmc150_stellar_cmd.vhd"]"\
 "[file normalize "$origin_dir/../source/fmc150/src/duc_complex_mixer.vhd"]"\
 "[file normalize "$origin_dir/../source/fmc150/src/ddc_complex_mixer.vhd"]"\
 "[file normalize "$origin_dir/../source/ethernet/fifo/kc705_ethernet_rgmii_bram_tdp.v"]"\
 "[file normalize "$origin_dir/../source/ethernet/common/kc705_ethernet_rgmii_sync_block.v"]"\
 "[file normalize "$origin_dir/../source/ethernet/common/kc705_ethernet_rgmii_reset_sync.v"]"\
 "[file normalize "$origin_dir/../ip/duc_srrc/duc_srrc.xci"]"\
 "[file normalize "$origin_dir/../ip/duc_imf3/duc_imf3.xci"]"\
 "[file normalize "$origin_dir/../ip/duc_imf2/duc_imf2.xci"]"\
 "[file normalize "$origin_dir/../ip/duc_imf1/duc_imf1.xci"]"\
 "[file normalize "$origin_dir/../ip/ddc_srrc/ddc_srrc.xci"]"\
 "[file normalize "$origin_dir/../ip/ddc_imf2/ddc_imf2.xci"]"\
 "[file normalize "$origin_dir/../ip/ddc_imf1/ddc_imf1.xci"]"\
 "[file normalize "$origin_dir/../ip/dac3283_init_mem/dac3283_init_mem.xci"]"\
 "[file normalize "$origin_dir/../ip/dac3283_init_mem/dac3283_init.coe"]"\
 "[file normalize "$origin_dir/../ip/cdce72010_init_mem_int/cdce72010_init_mem_int.xci"]"\
 "[file normalize "$origin_dir/../ip/cdce72010_init_mem_int/cdce72010_init_int_491_52MHz.coe"]"\
 "[file normalize "$origin_dir/../ip/cdce72010_init_mem_ext/cdce72010_init_mem_ext.xci"]"\
 "[file normalize "$origin_dir/../ip/cdce72010_init_mem_ext/cdce72010_init_ext_491_52MHz.coe"]"\
 "[file normalize "$origin_dir/../ip/amc7823_init_mem/amc7823_init_mem.xci"]"\
 "[file normalize "$origin_dir/../ip/amc7823_init_mem/amc7823_init.coe"]"\
 "[file normalize "$origin_dir/../ip/ads62p49_init_mem/ads62p49_init_mem.xci"]"\
 "[file normalize "$origin_dir/../ip/ads62p49_init_mem/ads62p49_init.coe"]"\
 "[file normalize "$origin_dir/../source/fmc150/src/duc_umts_k7.vhd"]"\
 "[file normalize "$origin_dir/../source/fmc150/src/ddc_umts_k7.vhd"]"\
 "[file normalize "$origin_dir/../source/fmc150/src/dac3283_ctrl.vhd"]"\
 "[file normalize "$origin_dir/../source/fmc150/src/cdce72010_ctrl.vhd"]"\
 "[file normalize "$origin_dir/../source/fmc150/src/amc7823_ctrl.vhd"]"\
 "[file normalize "$origin_dir/../source/fmc150/src/ads62p49_ctrl.vhd"]"\
 "[file normalize "$origin_dir/../source/ethernet/support/kc705_ethernet_rgmii_support_resets.v"]"\
 "[file normalize "$origin_dir/../source/ethernet/support/kc705_ethernet_rgmii_support_clocking.v"]"\
 "[file normalize "$origin_dir/../source/ethernet/fifo/kc705_ethernet_rgmii_tx_client_fifo.v"]"\
 "[file normalize "$origin_dir/../source/ethernet/fifo/kc705_ethernet_rgmii_rx_client_fifo.v"]"\
 "[file normalize "$origin_dir/../ip/SP_DDS/SP_DDS.xci"]"\
 "[file normalize "$origin_dir/../ip/kc705_ethernet_rgmii/kc705_ethernet_rgmii.xci"]"\
 "[file normalize "$origin_dir/../ip/DDS/DDS.xci"]"\
 "[file normalize "$origin_dir/../source/fmc150/src/fmc150_spi_ctrl.vhd"]"\
 "[file normalize "$origin_dir/../source/fmc150/src/DUC_DDC.vhd"]"\
 "[file normalize "$origin_dir/../source/fmc150/src/ADC_auto_calibration.vhd"]"\
 "[file normalize "$origin_dir/../source/ethernet/support/kc705_ethernet_rgmii_support.v"]"\
 "[file normalize "$origin_dir/../source/ethernet/pat_gen/kc705_ethernet_rgmii_axi_pipe.v"]"\
 "[file normalize "$origin_dir/../source/ethernet/pat_gen/kc705_ethernet_rgmii_axi_pat_gen.v"]"\
 "[file normalize "$origin_dir/../source/ethernet/pat_gen/kc705_ethernet_rgmii_axi_pat_check.v"]"\
 "[file normalize "$origin_dir/../source/ethernet/pat_gen/kc705_ethernet_rgmii_axi_mux.v"]"\
 "[file normalize "$origin_dir/../source/ethernet/pat_gen/kc705_ethernet_rgmii_address_swap.v"]"\
 "[file normalize "$origin_dir/../source/ethernet/fifo/kc705_ethernet_rgmii_ten_100_1g_eth_fifo.v"]"\
 "[file normalize "$origin_dir/../source/custom/kc705_ethernet_rgmii_axi_packetizer.v"]"\
 "[file normalize "$origin_dir/../ip/vio/vio.xci"]"\
 "[file normalize "$origin_dir/../ip/packetizer_ila/packetizer_ila.xci"]"\
 "[file normalize "$origin_dir/../ip/mmcm_adac/mmcm_adac.xci"]"\
 "[file normalize "$origin_dir/../ip/mmcm/mmcm.xci"]"\
 "[file normalize "$origin_dir/../ip/ila/ila.xci"]"\
 "[file normalize "$origin_dir/../source/fmc150/src/kc705_fmc150_ILA3.vhd"]"\
 "[file normalize "$origin_dir/../source/ethernet/pat_gen/kc705_ethernet_rgmii_basic_pat_gen.v"]"\
 "[file normalize "$origin_dir/../source/ethernet/kc705_ethernet_rgmii_fifo_block.v"]"\
 "[file normalize "$origin_dir/../source/ethernet/kc705_ethernet_rgmii_clk_wiz.v"]"\
 "[file normalize "$origin_dir/../source/ethernet/axi_lite_sm/kc705_ethernet_rgmii_axi_lite_sm.v"]"\
 "[file normalize "$origin_dir/../source/custom/adc_data_axis_wrapper.v"]"\
 "[file normalize "$origin_dir/../ip/ila_adc_wr_fifo/ila_adc_wr_fifo.xci"]"\
 "[file normalize "$origin_dir/../ip/ila_adc_rd_fifo/ila_adc_rd_fifo.xci"]"\
 "[file normalize "$origin_dir/../ip/fifo_generator_adc/fifo_generator_adc.xci"]"\
 "[file normalize "$origin_dir/../source/ethernet/kc705_ethernet_rgmii_example_design_resets.v"]"\
 "[file normalize "$origin_dir/../source/ethernet/kc705_ethernet_rgmii_example_design_clocks.v"]"\
 "[file normalize "$origin_dir/../source/ethernet/kc705_ethernet_rgmii_example_design.v"]"\
 "[file normalize "$origin_dir/../source/custom/radar_pulse_controller.v"]"\
 "[file normalize "$origin_dir/../source/custom/fmc150_dac_adc.v"]"\
 "[file normalize "$origin_dir/../ip/mig_7series_1/mig_7series_1.xci"]"\
 "[file normalize "$origin_dir/../ip/mig_7series_1/mig_b.prj"]"\
 "[file normalize "$origin_dir/../ip/ila_axi_mm2s_ic/ila_axi_mm2s_ic.xci"]"\
 "[file normalize "$origin_dir/../ip/ila_axis_vfifo/ila_axis_vfifo.xci"]"\
 "[file normalize "$origin_dir/../ip/ila_axis_adc_pkt/ila_axis_adc_pkt.xci"]"\
 "[file normalize "$origin_dir/../ip/ila_axis_adc/ila_axis_adc.xci"]"\
 "[file normalize "$origin_dir/../ip/axi_vfifo_ctrl_0/axi_vfifo_ctrl_0.xci"]"\
 "[file normalize "$origin_dir/../ip/axis_interconnect_1s2m/axis_interconnect_1s2m.xci"]"\
 "[file normalize "$origin_dir/../ip/axis_interconnect_1m2s/axis_interconnect_1m2s.xci"]"\
 "[file normalize "$origin_dir/../source/custom/kc705_gpr_top.v"]"\
 "[file normalize "$origin_dir/../ip/ila_regmap/ila_regmap.xci"]"\
 "[file normalize "$origin_dir/../source/custom/config_reg_map.v"]"\
 "[file normalize "$origin_dir/../source/custom/reg_map_cmd_gen.v"]"\
 "[file normalize "$origin_dir/../source/dma/axis_write_master.vhd"]"\
 "[file normalize "$origin_dir/../source/dma/axis_sts_master.vhd"]"\
 "[file normalize "$origin_dir/../source/dma/axis_data_read.vhd"]"\
 "[file normalize "$origin_dir/../source/dma/axis_ctrl_read.vhd"]"\
 "[file normalize "$origin_dir/../source/dma/axi_s2mm_read.vhd"]"\
 "[file normalize "$origin_dir/../source/dma/axi_lite_sm.vhd"]"\
 "[file normalize "$origin_dir/../source/dma/axi_dma_0_exdes.vhd"]"\
 "[file normalize "$origin_dir/../source/dma/axi4_write_master.vhd"]"\
 "[file normalize "$origin_dir/../ip/axi_dma_0_example/axi_bram_ctrl_0/axi_bram_ctrl_0.xci"]"\
 "[file normalize "$origin_dir/../ip/axi_dma_0_example/axi_traffic_gen_0/axi_traffic_gen_0.xci"]"\
 "[file normalize "$origin_dir/../source/dma/atg_data.coe"]"\
 "[file normalize "$origin_dir/../source/dma/atg_addr.coe"]"\
 "[file normalize "$origin_dir/../source/dma/atg_mask.coe"]"\
 "[file normalize "$origin_dir/../source/dma/atg_ctrl.coe"]"\
 "[file normalize "$origin_dir/../ip/axi_dma_0_example/blk_mem_gen_0/blk_mem_gen_0.xci"]"\
 "[file normalize "$origin_dir/../source/dma/sg_mif.coe"]"\
 "[file normalize "$origin_dir/../ip/axi_dma_0_example/axi_dma_0/axi_dma_0.xci"]"\
 "[file normalize "$origin_dir/../ip/axi_dma_0_example/axi_bram_ctrl_1/axi_bram_ctrl_1.xci"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
set file "src/pulse2pulse.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "src/fmc150_stellar_cmd.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "src/duc_complex_mixer.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "src/ddc_complex_mixer.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "src/duc_umts_k7.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "src/ddc_umts_k7.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "src/dac3283_ctrl.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "src/cdce72010_ctrl.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "src/amc7823_ctrl.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "src/ads62p49_ctrl.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "src/fmc150_spi_ctrl.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "src/DUC_DDC.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "src/ADC_auto_calibration.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "vio/vio.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "generate_synth_checkpoint" "0" $file_obj

set file "mmcm_adac/mmcm_adac.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "generate_synth_checkpoint" "0" $file_obj

set file "mmcm/mmcm.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "generate_synth_checkpoint" "0" $file_obj

set file "ila/ila.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "generate_synth_checkpoint" "0" $file_obj

set file "src/kc705_fmc150_ILA3.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "dma/axis_write_master.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "dma/axis_sts_master.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "dma/axis_data_read.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "dma/axis_ctrl_read.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "dma/axi_s2mm_read.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "dma/axi_lite_sm.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "dma/axi_dma_0_exdes.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "dma/axi4_write_master.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj


# Set 'sources_1' fileset properties
set obj [get_filesets sources_1]
set_property "top" "kc705_gpr_top" $obj

# Create 'constrs_1' fileset (if not found)
if {[string equal [get_filesets -quiet constrs_1] ""]} {
  create_fileset -constrset constrs_1
}

# Set 'constrs_1' fileset object
set obj [get_filesets constrs_1]

# Add/Import constrs file and set constrs file properties
set file "constraints/k7dsp_dds_mig.xdc"
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property "file_type" "XDC" $file_obj

# Set 'constrs_1' fileset properties
set obj [get_filesets constrs_1]
set_property "target_constrs_file" "[file normalize "$origin_dir/../constraints/k7dsp_dds_mig.xdc"]" $obj

# Create 'sim_1' fileset (if not found)
if {[string equal [get_filesets -quiet sim_1] ""]} {
  create_fileset -simset sim_1
}

# Set 'sim_1' fileset object
set obj [get_filesets sim_1]
set files [list \
 "[file normalize "$origin_dir/../sim/mig_sim/wiredly.v"]"\
 "[file normalize "$origin_dir/../sim/mig_sim/ddr3_model_parameters.vh"]"\
 "[file normalize "$origin_dir/../sim/mig_sim/ddr3_model.v"]"\
 "[file normalize "$origin_dir/../sim/fmc150_sim/KC705_fmc150_tb.vhd"]"\
 "[file normalize "$origin_dir/../sim/mig_sim/sim_tb_top.v"]"\
 "[file normalize "$origin_dir/../sim/packetizer/sim_tb_packetizer.v"]"\
 "[file normalize "$origin_dir/../sim/dma/axi_dma_0_exdes_tb.vhd"]"\
 "[file normalize "$origin_dir/../source/dma/axis_write_master.vhd"]"\
 "[file normalize "$origin_dir/../source/dma/axis_sts_master.vhd"]"\
 "[file normalize "$origin_dir/../source/dma/axis_data_read.vhd"]"\
 "[file normalize "$origin_dir/../source/dma/axis_ctrl_read.vhd"]"\
 "[file normalize "$origin_dir/../source/dma/axi_s2mm_read.vhd"]"\
 "[file normalize "$origin_dir/../source/dma/axi_lite_sm.vhd"]"\
 "[file normalize "$origin_dir/../source/dma/axi_dma_0_exdes.vhd"]"\
 "[file normalize "$origin_dir/../source/dma/axi4_write_master.vhd"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'sim_1' fileset file properties for remote files
# None

# Set 'sim_1' fileset file properties for local files
set file "mig_sim/ddr3_model_parameters.vh"
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property "file_type" "Verilog Header" $file_obj

set file "fmc150_sim/KC705_fmc150_tb.vhd"
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "dma/axi_dma_0_exdes_tb.vhd"
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "dma/axis_write_master.vhd"
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "dma/axis_sts_master.vhd"
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "dma/axis_data_read.vhd"
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "dma/axis_ctrl_read.vhd"
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "dma/axi_s2mm_read.vhd"
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "dma/axi_lite_sm.vhd"
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "dma/axi_dma_0_exdes.vhd"
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "dma/axi4_write_master.vhd"
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj


# Set 'sim_1' fileset properties
set obj [get_filesets sim_1]
set_property "top" "sim_tb_top" $obj

# Create 'synth_1' run (if not found)
if {[string equal [get_runs -quiet synth_1] ""]} {
  create_run -name synth_1 -part xc7k325tffg900-2 -flow {Vivado Synthesis 2014} -strategy "Vivado Synthesis Defaults" -constrset constrs_1
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs synth_1]
  set_property flow "Vivado Synthesis 2014" [get_runs synth_1]
}
set obj [get_runs synth_1]

# set the current synth run
current_run -synthesis [get_runs synth_1]

# Create 'impl_1' run (if not found)
if {[string equal [get_runs -quiet impl_1] ""]} {
  create_run -name impl_1 -part xc7k325tffg900-2 -flow {Vivado Implementation 2014} -strategy "Vivado Implementation Defaults" -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_1]
  set_property flow "Vivado Implementation 2014" [get_runs impl_1]
}
set obj [get_runs impl_1]

# set the current impl run
current_run -implementation [get_runs impl_1]

puts "INFO: Project created:project_1"
